%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: framework.pdf
%%Creator: Adobe Acrobat 15.7.0
%%For: I333624
%%CreationDate: 2017/5/21, 22:18:56
%%BoundingBox: -1 0 534 291
%%HiResBoundingBox: 0 0 533.1161 290.3966
%%CropBox: 0 0 533.1161 290.3966
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 813 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 81.157285, 2014/12/12-00:43:15        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/pdf"
   xmp:CreateDate="2017-05-21T22:17:48+08:00"
   xmp:ModifyDate="2017-05-21T22:17:48+08:00"
   pdf:Producer="Microsoft: Print To PDF">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>I333624</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Microsoft PowerPoint - framework.pptx</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -290.397 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-1.52588e-5 0 mo
-1.52588e-5 290.397 li
533.116 290.397 li
533.116 0 li
cp
clp
-63.2805 -50.2157 mo
728.72 -50.2157 li
728.72 395.344 li
-63.2805 395.344 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
.750179 .679652 .670192 .901488 cmyk
%ADOBeginSubsetFont: HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (HNSWTD+CIDFont+F1-GBK-EUC-H)
%%Title: (HNSWTD+CIDFont+F1-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /HNSWTD+CIDFont+F1-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -141 1000 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28779 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 5 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
3937 <001C60D8A8C9B5EE310D99A787756CA0BA53AFEC27BA629F5BAE03A6EA
977FE9567B41FE2E45D08B2B9BE75899F5B906C4743FCD1EAE4B5F868DA2C9D0
86812F8B9B3E4E7CAB8C239BAFB5A9C723373F9BD6099D1CF81964435BD67EB1
544DFD962AE3A4B444FFF362DE4C0907E7B1FC5F31D89937044E4E225DE73031
3450DF27C4685D1DA4E4918BD118B90AC2573A1635EE77E72383AC359332A76F
9D28E855D0A8DB6E36C30FA222F5BCF5B7AC77DF96E3483EFA6A9A6FD3089F4B
4E6988789D95CCBC3120> |
1553 <001C60D8A8C9B5EE3102DFD78FFE9775FBCAE29132675021C62E1A9FA9
8B60F442469D5F61A4D3B024EA1B283285BD812D93F75BB6F7371F4AFF5C06F4
90880B190493AA0102FB13E7633EC629F6D7E122C13CB4D295B72FA63445CEC3
8756AD4B22E25F26F4B15A844E7DC0056624F389F5F9BE798D80342AE8CFE1DC
D2A97B8A3858870DD5A93D70EA62C5AB5FCF74B4D80B918F1C65619916D4D1F4
018F6F5BE87745DE290D72132722FB58FCD01096011498A4A8C27A4013F061D6
CE8FBCCE675A46DF6BC31A1A8E7D05127E407A0D87375B50FA8A5033C6329670
A12CA7A47BE8256814D4872B065501C6FEDC3B238D991E287959770E9698C470
CA> |
16881 <001C60D8A8C9B5EE310D544230E4E1251C0729D7F1DC58886C17C6160
A182D35C6D3B7F7C95919E811019CEA99FF6ED8AAB728360BF1C4EAC72343D81
02312900FEB5ED67F86A10E90F4B9E349D5F473E01144FA6A1F03F512B745F5F
910AE38D806019D1B48671225B66AD1328EA3A1874E7374734F987C02E66F43C
CB5FDABD7668128AE8427B4BC15D8289CD9CA9AF37AA704F75AC3FC8E0472D9A
A1D3161C9FCBBFE5C8198B5879B7E5D84D6F6341AD24D109CAC5B74E2FEA0BF1
7DA6297ACAAF72309CE5C88DE170447F1C0912CA4C09E7C2CAF9F101B> |
6558 <001C60D8A8C9B5EE3102820CDF2059AE7E38A7DD18C49A35420DB1B091
122739BEE0A32333A53DA02BFB714548CF1E0E1DF60B241A30D0E145F324C703
AE6BA40AE7367E8F21EA0F895A1A694E0B1E2B95885487CB92CFDEC1E2ED11BD
F2A7DBB72F5444265C5E8CDEA08DFED3052C81B6BBB72AF4591784C70BE7200D
1AB7ED97BE9C64CF192F912D7354C4FC588801B4F164B79208B016F221435034
0368B5CEF714699166C38AC42E0CCA0FA1C090F3438CA38CFF62B62408B0FC66
1CED7047AA4C28E7CE51EF328B4A242D039B9E86CFF81B0EDB18BD659F822BAB
9AB06551093EE0FE1EFA44BE7E8A9488CA8FC87D41DC769F16898A16C300C034
E8999E3F32045143E4882EF8548B1BC02A3DF2D6FD591734B19E9905316166B0
88D1AE54C0DEDAFC3AE73A2E8B291D796FF1536C4768D97BC0D916F0190CF71C
0C> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H /Identity-H 0 [/HNSWTD+CIDFont+F1-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H findfont [11.52 0 0 -11.52 0 0 ]msf
92.9595 66.6643 mo
(\017a\006\021A\361\031\236)sh
%ADOBeginSubsetFont: HIBBAA+CIDFont+F2 Initial
ct_T42Dict begin
-1.473 -2.461 2.867 3.113
 256 array 0 1 255 {1 index exch /.notdef put} for  /HIBBAA+CIDFont+F2
Type42DictBegin
[<00010000000c000c000c000c4f532f325234b2c5000000cc000000606376
7420030315980000012c0000089e6670676db5b31812000009cc000010b3
676c79669e6c34dd0000cce80000244668656164f65692c500001a800000
00366868656112c2204400001ab800000024686d7478de38121a00001adc
000053566c6f6361160120b700006e34000039406d61787026de11c20000
a774000000206e616d65e05eea210000a7940000142b70726570664ecf85
0000bbc00000112867646972000000000000000000000000000304ec0190
00050008059a05330000009c059a0533000001f7006601fe020f02040503
050406030204e00002ff400004ff00000000000000004d53202000400000
fe000639fe390161079a01c72000019f0000000003bc0555000000200003
058d000a000005550010002b000000000000041700100000000000000000
03bc001000000000fff0ff9d0000fff00000000000000000fe52fff00000
000000000000000005b1000d033d000d055500100215fff002e00010ffa0
fff000000000000000000000000000000000000000000000000000000000
03e000100000000000000800000008000000040000000042007d00000000
000000630000000000000063007000000000005600000000000000000000
00000000000000000000000000000000000000c200000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000ce00c900bb00830000000000bc00b300ac0000
0000000000ac00b5008500c200bc0078000000000059004f008400a0004f
00540078005a00490055005e00690000007100a400a50000000000000062
0060003100310000003e000a008a00000000000000ca00e800b601fc00a4
009b0000000000000000000000000000000000930085007200b800c2009b
004a0069003e00910063009400ab009f004b008600910000000000000000
000000d60000000000e00261006a007300a700b000850064006800000000
004d00810048005c0078004600560071006e008a005a00af00b4006500b1
0099007800bc0052009e06be00080274000d033dfff3023afff3008b0000
009602740281028e03800074007c009e00de00f40090008ffec2fff00000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00900098004b0084008e0042005a033d03500360007d0000000000000000
000000000000000000000000000000000000000000000000000000000000
00b700a400c10072007800b300a600ac009e00900125009a0087007d010c
009d00bc0132009100000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000b7008c00a60000000000000000000000000000
00c300b900af00a50055008e00520073009b00a800420050000000000000
000000000000000000000128010a0083006a005a010e00fa005f00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000700063007800540082
006a00720087005800660031007500580068005800750000000000000000
0136013e0088007100a3012d00e400750042007e006e0121013000c60088
0118007a0068009d0042009400ba0130013e007300b4012800f90070005b
008e000000000000000000000000000000000000058d0010000005550010
000000000800011600ce0000040003fa0000000003ea001000000000fff0
00000000fff00000012400c80000fe52fff00000000000000123010d00bc
00b700aa00c600a2009b011b010300f500e100fe012f011c00bc012900d1
012900c600fa00ba00c1010e00ec011b011800d701010000000000000000
00000000000000000000058d001000000555001000000000080000ba008b
0565040000000000000003ea001000000000fff000000000fff0000000b1
008d0000fe52fff0000000000000008100a7009c00c2007d00ac00b400bb
00c1009200b600bb008c00b400a00085009700ad00a600a60091008000a2
00000000000000000000055a0033000005670033000000000800010e00c3
0000040000000000000003c000330000ffd1ffcd00000000ffcd00000000
00000000fe8effcd00000000000000d5006900db003e0050004900000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000207fce305df0249050f
0501ffeb04aa0704fe5b01f5000000a50070009300a5007b007b00670000
000000000000000000000000000000000000000003fd03e805afffee05ba
fe4205110524fe71fe7c000a00d700d900cf00c500e300d300d500ca00e7
033003c503e103f20460040605cd05a200b5042e00770096000000000000
00000000000000000000046e0468045104a4045a042e05270000041c004d
00520057005c00600062006b007200000590073104920556056403f203fa
05980000006c00780086008e0093007e000040718574737271706f6e6d6c
6b6a69686766656463625f5e5d5c5b5a595855545351504f4e524d4c4b4a
4948474644434241403f3e3d3c3b3a393837363534333231302f2e2d2c2b
2a292827262524232221201f1e1d1c1b1a191817161514131211100f0e0d
0c0b0a090807060504030201002c0118b0184358456ab0194360b00c2344
231020b00c4ef04d2fb000121b21231120332f592d2c0118b0184358b005
2bb000134bb0145058b100403859b0062b1b21231120332f592d2c0118b0
1843584eb0032510f221b000124d1b2045b00425b00425234a6164b02852
58212310d61bb0032510f221b0001259592d2cb01a435821211bb00225b0
022549b00325b003254a612064b01050582121211bb00325b0032549b000
5058b0005058b8ffe238211bb0003821591bb0005258b01e38211bb00038
21595959592d2c0118b0184358b0052bb000134bb0145058b90000ffc038
59b0062b1b21231120332f592d2c4e018a10b10c194344b00014b1000ce2
b00015b90000fff03800b0003cb0282bb0022510b0003c2d2c0118b0002f
b00114f2b00113b001154db000122d2c0118b0184358b0052bb00013b900
00ffe038b0062b1b21231120332f592d2c0118b018435845646a23456469
b01943646060b00c2344231020b00cf02fb000121b2121208a208a525811
331b212159592d2c014bb0c85158b10b0a432343650a592d2c004bb0c851
5800b10a0b4323430b592d2c00b00c2370b1010c3e01b00c2370b1020c45
3ab10200080d2d2cb0122bb0022545b00225456ab0408b60b00225234421
21212d2cb0132bb0022545b00225456ab8ffc08c60b0022523442121212d
2cb000b0122b2121212d2cb000b0132b2121212d2c014bb0c85158b00643
b00743650a592d2c2069b04061b0008b20b12cc08a8cb8100062602b0c64
2364615c58b00361592d2cb1000325456854b01c4b505a58b0032545b003
2545606820b004252344b0042523441bb00325204568208a2344b0032545
6860b003252344592d2cb00325204568208a2344b003254564686560b004
25b0016023442d2cb00143588721c01bb01243588745b0112bb00d2344b0
0d7ae41b038a45186920b00d23448a8a8720b0a05158b0112bb00d2344b0
0d7ae41b21b00d7ae4595959182d2c208a4523456860442d2c456a422d2c
01182f2d2c0118b0184358b00425b00425496423456469b0408b6120b080
626ab00225b00225618cb0194360b00c2344218a10b00cf6211b21212121
592d2c01b0184358b0022545b002254564606ab00325456a6120b0042545
6a208a8b65b0042523448cb00325234421211b20456a4420456a44592d2c
012045b00055b018435a584568234569b0408b6120b080626a208a236120
b003258b65b0042523448cb00325234421211b2121b0192b592d2c018a8a
45642345646164422d2cb00425b00425b0192bb0184358b00425b00425b0
0325b01b2b01b0022543b04054b0022543b000545a58b003252045b04061
4459b0022543b00054b0022543b040545a58b004252045b0406044595921
2121212d2cb0032520b0072587052e23208ab00425b00725b0142b1021c4
212d2cc02d2c4b525845441b2121592d2cb00243583ded181bed592d2c4b
505845441b2121592d2c01184b52588a2fed1b212121592d2c4b53234b51
5a58b003254568b003254568b003256054582121211bb00225456860b003
2523442121591b212121592d2cb00243583dcd181bcd592d2cb002435c58
462346608a8a462320468a608a61b8ff8062232010238ab10c0c8a704560
20b0005058b00161b8ffba8b1bb0468c59b0106068013a1b212121212159
2d2c2045b0032546524bb013515b58b0022546206861b00325b003253f23
21381b2111592d2c2045b00325465058b0022546206861b00325b003253f
2321381b2111592d2c004bb0c8515800b00743b006430b592d2c8a10ec2d
2cb00e4358211b2046b0005258b8fff0381bb0103859592d2c20b0005558
b8100063b003254564b00325456461b0005358b0021bb04061b003592545
69535845441b2121591b21b0022545b00225456164b028515845441b2121
59592d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000
621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200
802f2b59b002602d2c0c6423648bb84000626023212d2c184b5358b00425
b00425496423456469b0408b6120b080626ab00225b00225618cb00c2344
218a10b00cf6211b218a11231220392f592d2cb00225b002254964b0c054
58b8fff838b008381b2121592d2cb0134358031b02592d2cb0134358021b
03592d2cb00a2b2310203cb0172b2d2cb00225b8fff038b0282b8a102320
d023b0102bb0044358c01b3c59201011b00012012d2cb0482b2d2c01b002
2510d023c901b00113b0001410b0013cb001162d2c01b00013b001b00325
49b0031738b001132d2c4b53234b515a5820458a60441b2121592d2c184b
5358b00425b004254964b00325b00325496468b0408b6120b080626ab002
25b00225618cb00c234421b004251023b00cf61bb00425b0042511122320
392f59cc21212d2c0118b0184358b0052546234564611b21b00425b00425
4a59b00e23442310b00eec2310b00eec2d2cb01b435820b0016045b00051
5820b0016020452068b0005558b0206044211b212121591b20b001602045
2068b0005558b8ffe06044b01c4b50582045b02060441b21591b21212159
591b21592d2cb0022546206861b00325b003253f2321382d2c462346608a
8a462320468a608a61b8ff8062232010238ab10c0c8a70456020b0005058
b00161b8ff808b1bb0818c59683a2d2cb0402a212d2c2035b001602d2cb0
024354584b53234b515a58381b2121591b21212121592d2c49b00e23442d
2cb0024354584b53234b515a5820458a60441b2121591b21212121592d2c
8a10b002435821b0301ac9181bb0401a18ed592d2c4b53234b515a582045
8a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58
381b2121592d2c4b5458381b2121592d2cb002435458b0462b1b21212121
592d2cb002435458b0472b1b212121592d2cb002435458b0482b1b212121
21592d2cb002435458b0492b1b212121592d2c4b52587d1b7a592d2c2320
b000508a8a64b10003255458b0401bb10103255458b005438b59b04f2b59
23b0622b2321235865592d2cb108000c215460432d2c0146234660234661
23201020468a61b8ff80628ab140408a704560683a2d2c208a2349648a23
53583c1b21592d2cb012004b014b54422d2cb1020042b123018851b14001
88535a58b910000020885458b202010243604259b12401885158b9200000
40885458b2020202436042b12401885458b2022002436042004b014b5258
b2020802436042591bb940000080885458b202040243604259b940000080
63b80100885458b202080243604259b94000010063b80200885458b20210
0243604259b12601885158b94000020063b80400885458b2024002436042
59b94000040063b80800885458b202800243604259b12801885158b94000
080063b81000885458ba00020100000243604259595959595959b1000243
5458400a0540084009400c020d021bb10102435458b2054008ba01000009
0100b30c010d011bb18002435258b2054008b80180b109401bb901000002
435258b2054008ba0180000901401bb901800002435258b2054008b80200
b109401bb2054008ba010000090100595959b9400000808855b940000200
63b8040088555a58b30c000d011bb30c000d0159595942424242422d2c45
1868234b51582320452064b04050587c59688a6059442d2cb00016b00225
b0022501b001233e00b002233eb10102060cb00a236542b00b234201b001
233f00b002233fb10102060cb006236542b0072342b00116012d2c20b820
00628a6023622d2cb0072558001b0159b0042510b00325b0022520b8ffff
545821cd1bed5921b006255cb006255a58b0092b5920b005254ab0042547
b004254760b0062547b0806361b00225b0005558b00325b00725496359b0
082558001b0159b00425b0062549b009255cb009255a58b0092b59b00725
46b0806361b0032520b0005558631b2159612320b0005558b080631b21b0
8059b0592bb006255c586959b00425202010b00048233ab0062658001b01
59b0052658b003252f598a12233221212d2cb00625b00a2587b00625b009
254ab0005358b00625b00a251bb00925b0072559b00225b00225070cb005
256323b00625636020b94000040063535821b00426b00426b00a1bb94000
040063655158b0042665b0042665b00a1bb00426b00426b000b00325b003
250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b0052507595920b0
005558b00525b0052587b00725b007250bb0092510b00b25b0092620b8ff
ff545821cd1bed59b00525b0052507b00825b00b254923b00625b0062587
b00a2510b00b25c15920b00051b800522378b00161b00225b00725b00725
07b00a25b00d254961b08062b00525b005250bb00a252338b00625b00625
87b00825b008250bb00a2510b00b25c4b00625b0062507b00925b00c2549
b0032554b8ffa723792121212121212121212121212d2c23b0005458b940
0000001bb900004000598ab0005458b9400000001bb90000400059b05b2b
2d2c08b0005458b9400000001bb900004000590db05b2b2d2c8a8a080d8a
b0005458b9400000001bb90000400059b05b2b2d2cb00426b00426080db0
0426b00426080db05b2b2d2cb0022563b0206066b00225b8200062602362
2d2c0020b200400325b0062649618b3812342d2c204569442d2c234ab102
4e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b002256164b00343
525821206459b1024e2b23b000505865592d2c238a4a234564b0022564b0
02256164b00343525821206459b1014e2b23b000505865592d2c20b00325
4ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb00325b00325
8ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb0032546b003
254660b004252eb00425b00425b0042620b000505821b06a1bb06c592bb0
032546b00325466061b08062208a2010233a232010233a2d2cb0032547b0
03254760b0052547b0806361b00225b00625496323b005254ab080632058
621b2159b0042646608a468a4660b02063612d2cb00426b00425b00425b0
0426b06e2b208a2010233a232010233a2d2c2320b001545821b00225b102
4e2bb0805020605920606020b001515821211b20b005515821206661b040
2361b100032550b00325b00325505a5820b00325618a535821b000591b21
591bb00754582066616523211b2121b000595959b1024e2b2d2cb00225b0
04254ab0005358b0001b8a8a238ab00159b004254620666120b00526b006
2649b00526b00526b0702b236165b02060206661b02061652d2cb0022546
208a20b000505821b1024e2b1b452321596165b00225103b2d2cb0042620
b802006220b80200638a236120b05d602bb00525118a128a20398a58ba00
5d10000004266356602b23212010204620b1024e2b23611b2321208a2010
49b1024e2b593b2d2cba005d10000009256356602bb00525b00525b00526
b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba005d100000
08266356602b20b0005258b0502bb00525b00525b00725b00725b00525b0
712bb0021738b00052b00225b001525a58b00425b0062549b00325b00525
496020b0405258211bb000525820b0025458b00425b00425b00725b00725
49b00217381bb00425b00425b00425b0062549b002173859595959592121
2121212d2cb12501885058b94000020063b8040088545cb0164b525b1bb0
01592d00000100000006e8f5ea322bb75f0f3cf5001b080000000000b9e6
983d00000000d215c75cf434ec4a16f118ef000000090002000000000000
00010000079afe390000175af434fda416f1000100000000000000000000
000000000d0c054400be0000000001c30000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000686007500000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000004700069000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000034f
005300000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000004aa006a00000000000000000000
0000000000000000000000000000000000000000000005bb006500000000
000000000000000000000000046a00680000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000034e005d000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000284004e00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000001a40018000000000000000000000000060400f9
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000032500910000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000004af005d000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000004c3004600000000000000000000000000000000
00000000000000000000000000000000000000000000000003f800690000
000000000000000000000000000000000000000000000000000000000000
049700180000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000004cc006904d9000f0000000000000000000000000000000000000000
0000000000000000000000000424000f0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000004a100b704a10088
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000007310088000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000501008200000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000003c6006b0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
04ea00420000000000000000000000000000000000000000000000000000
000000000000000000000000000004570080000000000000000000000000
02ce00a6000000000000000000000000077b002905320029000000000000
000000000000000000000000000000000000000000000000000000000000
000000000511001900000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000005530080
057d004f0000000000000000000000000000000000000000000000000000
00000000000004a8001d0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000004c200b804c2
009000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000007af009900000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000056c00990000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000004210080000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000005740042000000000000000000000000000000000000000000000000
000000000000000000000000000000000497009400000000000000000000
000000000000000000000000000000000000080e003905a7003900000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000005b4
009405f90088000000000000000000000000000000000000000000000000
00000000000000000508002b000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000>
<000000760076007600760076007600760076007600760076007600760076
007600760118011801180118011801180118011801180118011801180118
011801180118011801180118011801180118011801180118011801180118
011801180118011801180118011801180118011801180118011801180118
011801180118011801180118011801180118011801180118011801180118
011801180118011801180118011801180118011801180118011801180118
011801180118011801180118011801180118011801180118011801180118
011801180118011801180118011801180118011801180118011801180118
011801180118011801180118011801180118011801180118011801180118
01b001b001b001b001b001b001b001b001b001b001b001b001b001b0023b
023b023b023b023b023b023b023b023b023b023b023b023b023b023b023b
023b023b023b023b023b023b023b023b023b023b023b023b023b023b023b
023b023b023b023b023b023b023b023b023b023b023b023b023b023b023b
023b023b023b023b023b023b023b023b023b023b023b023b023b023b023b
023b023b023b023b023b023b023b023b023b023b023b023b023b023b023b
023b023b023b023b023b023b023b023b023b023b023b023b023b023b023b
023b023b023b023b023b023b023b023b023b023b023b023b023b023b023b
023b023b023b023b023b023b023b023b023b023b023b0291029102910291
02910291029102910291030c030c030c030c030c03980398039803980398
039803980398039803980398039803980398039803980398039803980398
039803980398039803980398039803980398039803980398039803980398
039803980398039803980398039803980398039803980398039803980398
039803980398039803980398039803980398039803980398039803980398
039803980398039803980398039803980398039803980398039803980398
039803980398039803980398039803980398039803980398039803980398
039803980398039803980398039803980398039803980398039803980398
039803980398041704170417041704170417041704170417041704170417
041704170478047804780478047804780478047804780478047804780478
047804780478047804780478047804780478047804780478047804780478
047804780478047804780478047804780478047804780478047804780478
047804780478047804780478047804780478047804780478047804780478
047804780478047804780478047804780478047804780478047804780478
0478047804b004b004b004b004ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef05190519
051905190519051905190519051905190519051905190519051905190519
051905190519051905190519051905190519051905190519051905190519
051905190519051905190519051905190519051905190519051905190519
051905190519051905190519051905190519051905190519051905190519
051905190519051905190519051905190519051905190519051905190519
051905190519051905190519051905190519051905190519051905190519
051905190519051905190519051905190519051905190519051905190519
051905190519051905190519051905190519051905190519051905190519
051905190519051905190519051905190519051905190519051905190519
051905190519051905190519051905190519051905190519051905190519
051905190519051905190519051905190519051905190519051905190519
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205a205a205a205a205a205a205a205a205a205a205a205a205a2
05a205a205e805e805e805e805e805e805e805e805e805e805e806330633
0633063306330633063306330633069d069d069d069d069d069d069d069d
069d069d069d069d069d069d069d069d069d069d069d069d069d069d069d
069d069d069d069d069d069d069d069d069d069d069d069d069d069d069d
069d069d069d069d069d069d069d069d069d069d069d069d069d069d069d
069d069d069d069d069d069d069d069d069d069d069d069d069d069d069d
069d069d069d069d069d069d069d069d069d069d069d069d069d069d069d
069d069d069d069d069d069d069d069d069d069d069d069d069d069d069d
069d069d069d069d069d069d069d069d069d069d069d069d069d069d069d
069d069d069d069d069d069d069d069d069d069d069d069d069d069d069d
069d069d069d069d069d069d069d069d069d069d069d069d069d069d069d
0702075f075f075f075f075f075f075f075f075f07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be07be07be07be07be07be07be07be07be07be07be
07be07be07be07be07be080a086308630863086308630863086308630863
086308630863086308630863086308630863086308630863086308630863
08630863086308e508e508e508e508e508e508e508e508e508e508e508e5
08e508e508e508e508e50969096909690969096909690969096909690969
096909690969096909cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc
09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc
09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc
09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc
09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc
09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc
09cc09cc09cc09cc09cc09cc09cc0a1f0a1f0a1f0a1f0a1f0a1f0a1f0a1f
0a1f0a1f0a1f0a750a750a750a750acb0acb0acb0acb0b750bf30bf30bf3
0bf30bf30bf30bf30bf30bf30bf30bf30c650c650c650c650c650c650c65
0c650c650c650c650c650c650c650c650c650c650c650c650c650c650c65
0c650c650c650c650c650c650cea0d4f0d4f0d4f0d4f0d4f0d4f0d4f0d4f
0d4f0db90db90db90db90db90db90db90db90db90db90db90db90db90db9
0db90db90db90db90db90db90db90db90db90db90db90db90db90df90e50
0e500e500e500e500e500e500e500e500e500e500e500e500e500e500e50
0e500e500e500e500e500e500e500e500e500e500e500ec30ec30ec30ec3
0ec30ec30ec30ec30ec30ec30ec30ec30ec30ec30ec30ec30ec30f320f32
0f320f320f320f320f320f320f320f320f320f320f320f320f880f880f88
0f880f880f880f880f880f880f880f880f880f880f880f880f880f880f88
0f880f880f880f880f880f880f880f880f880f880f880f880f880f880f88
0f880f880f880f880f880f880f880f880f880f880f880f880f880f880f88
0f880f880f880f880f880f880f880f880f880f880f880f880f880f880f88
0f880f880f880f880f880f880f880f880f880f880f880f880f880f880f88
0f880f880f880f880f880f880f880f880f880f880f880f880f880f880f88
0fcf0fcf0fcf0fcf0fcf0fcf0fcf0fcf0fcf0fcf0fcf1017101710171017
101710171017101710a1110b110b110b110b110b110b110b110b110b110b
110b110b110b110b110b110b110b110b110b110b110b110b110b110b110b
110b110b110b110b110b110b110b110b110b110b110b110b110b110b1172
11cd11cd11cd11cd11cd11cd11cd11cd11cd122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
122312231223122312231223122312231223122312231223122312231223
12231223122312231223122312231223000100001c9f0069000400000000
00020010002f0086000009a41128000000000000002f023a000000000000
000d02980000000000000000000e006c0298000000030000000000640304
0000000300000001000e03680000000300000002000e0a72000000030000
000300240a800000000300000004000e0368000000030000000500180aa4
0000000300000006000e0368000000030000000700760abc000000030000
0008002a0312000000030000000900460b32000000030000000a070a0368
000000030000000b00560b78000000030000000c00280bce000000030000
000d02980000000000030000000e006c0298000100000000000000320bf6
000100000000000100070c28000100000000000200070fad000100000000
000300120fb4000100000000000400070c280001000000000005000c0fc6
000100000000000600070c280001000000000007003b0fd2000100000000
000800150bfd00010000000000090023100d000100000000000a03850c28
000100000000000b002b1030000100000000000c0014105b000100000000
000d014c106f000100000000000e003611bb000300010409000000640304
0003000104090001000e03680003000104090002000e0a72000300010409
000300240a800003000104090004000e0368000300010409000500180aa4
0003000104090006000e0368000300010409000700760abc000300010409
0008002a0312000300010409000900460b32000300010409000a070a0368
000300010409000b00560b78000300010409000c00280bce000300010409
000d02980000000300010409000e006c02980059006f00750020006d0061
007900200075007300650020007400680069007300200066006f006e0074
0020006100730020007000650072006d0069007400740065006400200062
00790020007400680065002000450055004c004100200066006f00720020
007400680065002000700072006f006400750063007400200069006e0020
007700680069006300680020007400680069007300200066006f006e0074
00200069007300200069006e0063006c007500640065006400200074006f
00200064006900730070006c0061007900200061006e0064002000700072
0069006e007400200063006f006e00740065006e0074002e00200059006f
00750020006d006100790020006f006e006c007900200028006900290020
0065006d0062006500640020007400680069007300200066006f006e0074
00200069006e00200063006f006e00740065006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
006500200065006d00620065006400640069006e00670020007200650073
007400720069006300740069006f006e007300200069006e0063006c0075
00640065006400200069006e0020007400680069007300200066006f006e
0074003b00200061006e006400200028006900690029002000740065006d
0070006f0072006100720069006c007900200064006f0077006e006c006f
006100640020007400680069007300200066006f006e007400200074006f
002000610020007000720069006e0074006500720020006f00720020006f
00740068006500720020006f007500740070007500740020006400650076
00690063006500200074006f002000680065006c00700020007000720069
006e007400200063006f006e00740065006e0074002e0068007400740070
003a002f002f007700770077002e006d006900630072006f0073006f0066
0074002e0063006f006d002f007400790070006f00670072006100700068
0079002f0066006f006e00740073002f00640065006600610075006c0074
002e006100730070007800a9002000320030003100350020004d00690063
0072006f0073006f0066007400200043006f00720070006f007200610074
0069006f006e002e00200041006c006c0020007200690067006800740073
002000720065007300650072007600650064002e00430061006d00620072
0069006100200068006100730020006200650065006e0020006400650073
00690067006e0065006400200066006f00720020006f006e002d00730063
007200650065006e002000720065006100640069006e006700200061006e
006400200074006f0020006c006f006f006b00200067006f006f00640020
007700680065006e0020007000720069006e007400650064002000610074
00200073006d0061006c006c002000730069007a00650073002e00200049
00740020006800610073002000760065007200790020006500760065006e
002000730070006100630069006e006700200061006e0064002000700072
006f0070006f007200740069006f006e0073002e00200044006900610067
006f006e0061006c00200061006e00640020007600650072007400690063
0061006c00200068006100690072006c0069006e0065007300200061006e
006400200073006500720069006600730020006100720065002000720065
006c00610074006900760065006c00790020007300740072006f006e0067
002c0020007700680069006c006500200068006f00720069007a006f006e
00740061006c002000730065007200690066007300200061007200650020
0073006d0061006c006c00200061006e006400200069006e00740065006e
006400200074006f00200065006d00700068006100730069007a00650020
007300740072006f006b006500200065006e00640069006e006700730020
0072006100740068006500720020007400680061006e0020007300740061
006e00640020006f007500740020007400680065006d00730065006c0076
00650073002e002000540068006900730020007000720069006e00630069
0070006c00650020006900730020006d006f007300740020006e006f0074
00690063006500610062006c006500200069006e00200074006800650020
006900740061006c00690063007300200077006800650072006500200074
006800650020006c006f0077006500720063006100730065002000630068
006100720061006300740065007200730020006100720065002000730075
0062006400750065006400200069006e0020007300740079006c00650020
0074006f0020006200650020006100740020007400680065006900720020
006200650073007400200061007300200065006c0065006d0065006e0074
00730020006f006600200077006f00720064002d0069006d006100670065
0073002e0020005700680065006e002000430061006d0062007200690061
0020006900730020007500730065006400200066006f0072002000630061
007000740069006f006e0073002000610074002000730069007a00650073
0020006f00760065007200200032003000200070006f0069006e0074002c
0020007400680065002000200069006e007400650072002d006300680061
007200610063007400650072002000730070006100630069006e00670020
00730068006f0075006c006400200062006500200073006c006900670068
0074006c00790020007200650064007500630065006400200066006f0072
0020006200650073007400200072006500730075006c00740073002e0020
005400680065002000640065007300690067006e002000690073006e0027
00740020006a00750073007400200069006e00740065006e006400650064
00200066006f007200200062007500730069006e00650073007300200064
006f00630075006d0065006e00740073003a002000540068006500200072
006500670075006c00610072002000770065006900670068007400200068
006100730020006200650065006e00200065007800740065006e00640065
006400200077006900740068002000610020006c00610072006700650020
0073006500740020006f00660020006d00610074006800200061006e0064
00200073006300690065006e00630065002000730079006d0062006f006c
0073002e002000540068006500200047007200650065006b00200061006e
006400200043007900720069006c006c0069006300200068006100730020
006200650065006e002000640065007300690067006e0065006400200075
006e00640065007200200063006c006f0073006500200073007500700065
00720076006900730069006f006e0020006f006600200061006e00200069
006e007400650072006e006100740069006f006e0061006c002000740065
0061006d0020006f006600200065007800700065007200740073002c0020
00770068006f002000610069006d0065006400200074006f002000730065
00740020006100200068006900730074006f0072006900630061006c0020
006e006500770020007300740061006e006400610072006400200069006e
0020006d0075006c00740069002d00730063007200690070007400200074
007900700065002000640065007300690067006e002e0052006500670075
006c00610072004d006900630072006f0073006f00660074003a00200043
0061006d006200720069006100560065007200730069006f006e00200036
002e0039003100430061006d006200720069006100200069007300200061
002000740072006100640065006d00610072006b0020006f006600200074
006800650020004d006900630072006f0073006f00660074002000670072
006f007500700020006f006600200063006f006d00700061006e00690065
0073002e004d006f006e006f007400790070006500200049006d00610067
0069006e006700200061006e00640020005400690072006f002000540079
007000650077006f0072006b00730068007400740070003a002f002f0077
00770077002e006d006900630072006f0073006f00660074002e0063006f
006d002f007400790070006f006700720061007000680079002f00630074
0066006f006e007400730068007400740070003a002f002f007700770077
002e0066006f006e00740073002e0063006f006da92032303135204d6963
726f736f667420436f72706f726174696f6e2e20416c6c20726967687473
2072657365727665642e43616d6272696120686173206265656e20646573
69676e656420666f72206f6e2d73637265656e2072656164696e6720616e
6420746f206c6f6f6b20676f6f64207768656e207072696e746564206174
20736d616c6c2073697a65732e204974206861732076657279206576656e
2073706163696e6720616e642070726f706f7274696f6e732e2044696167
6f6e616c20616e6420766572746963616c20686169726c696e657320616e
6420736572696673206172652072656c61746976656c79207374726f6e67
2c207768696c6520686f72697a6f6e74616c207365726966732061726520
736d616c6c20616e6420696e74656e6420746f20656d70686173697a6520
7374726f6b6520656e64696e677320726174686572207468616e20737461
6e64206f7574207468656d73656c7665732e2054686973207072696e6369
706c65206973206d6f7374206e6f7469636561626c6520696e2074686520
6974616c69637320776865726520746865206c6f77657263617365206368
617261637465727320617265207375626475656420696e207374796c6520
746f206265206174207468656972206265737420617320656c656d656e74
73206f6620776f72642d696d616765732e205768656e2043616d62726961
206973207573656420666f722063617074696f6e732061742073697a6573
206f76657220323020706f696e742c207468652020696e7465722d636861
7261637465722073706163696e672073686f756c6420626520736c696768
746c79207265647563656420666f72206265737420726573756c74732e20
5468652064657369676e2069736e2774206a75737420696e74656e646564
20666f7220627573696e65737320646f63756d656e74733a205468652072
6567756c61722077656967687420686173206265656e20657874656e6465
6420776974682061206c6172676520736574206f66206d61746820616e64
20736369656e63652073796d626f6c732e2054686520477265656b20616e
6420437972696c6c696320686173206265656e2064657369676e65642075
6e64657220636c6f7365207375706572766973696f6e206f6620616e2069
6e7465726e6174696f6e616c207465616d206f6620657870657274732c20
77686f2061696d656420746f20736574206120686973746f726963616c20
6e6577207374616e6461726420696e206d756c74692d7363726970742074
7970652064657369676e2e526567756c61724d6963726f736f66743a2043
616d6272696156657273696f6e20362e393143616d627269612069732061
2074726164656d61726b206f6620746865204d6963726f736f6674206772
6f7570206f6620636f6d70616e6965732e4d6f6e6f7479706520496d6167
696e6720616e64205469726f2054797065776f726b73687474703a2f2f77
77772e6d6963726f736f66742e636f6d2f7479706f6772617068792f6374
666f6e7473687474703a2f2f7777772e666f6e74732e636f6d596f75206d
617920757365207468697320666f6e74206173207065726d697474656420
6279207468652045554c4120666f72207468652070726f6475637420696e
207768696368207468697320666f6e7420697320696e636c756465642074
6f20646973706c617920616e64207072696e7420636f6e74656e742e2059
6f75206d6179206f6e6c792028692920656d626564207468697320666f6e
7420696e20636f6e74656e74206173207065726d69747465642062792074
686520656d62656464696e67207265737472696374696f6e7320696e636c
7564656420696e207468697320666f6e743b20616e642028696929207465
6d706f726172696c7920646f776e6c6f6164207468697320666f6e742074
6f2061207072696e746572206f72206f74686572206f7574707574206465
7669636520746f2068656c70207072696e7420636f6e74656e742e687474
703a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f67726170
68792f666f6e74732f64656661756c742e6173707800b9002001feb40918
014a20b801fab40918014a20b801f9b40918014a20b801f8b40918014a20
b801f7b40918014a20b801f6b40918014a20b801f0b40918014a20b801ef
b40918014a20b801eeb40918014a20b801edb40918014a20b801ecb40918
014a20b801ebb40918014a20b801e6b40918014a20b801e5b40918014a20
b801e4b40918014a20b801e3b40918014a20b801e2b40918014a20b801e1
b40918014a20b801e0b40918014a20b801d3b40918014a20b801d2b40918
014a20b801d1b40918014a20b801cfb40918014a20b801ceb40918014a20
b801cdb40918014a20b801ccb40918014a20b801a0b40918014a20b8018f
b40918014a20b8018eb40918014a20b8018ab40918014a20b80188b40918
014a20b80187b40918014a20b80186b40918014a20b8015bb40918014a20
b8015ab40918014a20b80159b40918014a20b80158b40918014a20b80154
b40918014a20b80150b40918014a20b8014cb40918014a20b8014bb40918
014a20b8014ab40918014a20b80136b40918014a20b80130b40918014a20
b8012fb40918014a20b8012db40918014a20b8012cb40918014a20b80109
b40918014a20b80107b40918014a20b8010540ff0918014a20f40918014a
20f20918014a20f10918014a20f00918014a20ef0918014a20ed0918014a
20ec0918014a20ea0918014a20e50918014a20e40918014a20e30918014a
20e10918014a20de0918014a20da0918014a20d80918014a20d30918014a
20cd0918014a20cc0918014a20ca0918014a20c90918014a20c80918014a
20c60918014a20c40918014a20c20918014a20c00918014a20bf0918014a
20bd0918014a20b30918014a20b10918014a20af0918014a20a50918014a
20a40918014a20a00918014a208e0918014a208d0918014a208c0918014a
208b0918014a208a0918014a20890918014a20850918014a20840918014a
2083091801403e4a20800918014a207f0918014a207e0918014a207d0918
014a20620918014a20510918014a20500918014a20480918014a20420918
014a200e0918014a0f41630441001f0441002f0441003f0441004f044100
5f0441006f0441007f0441008f0441009f044100af044100bf044100cf04
41000d005f03ea0001008003f4009003f400a003f400b003f400c003f400
d003f400e003f400f003f40008002f0433003f0433004f0433005f043300
6f0433007f0433008f0433009f043300af043300bf0433000a001f043400
2f0434003f0434004f0434005f0434006f0434007f0434000700cf042300
df042300ef04230003000f0423001f0423003f0423005f0423009f042340
2305f0e201b0fdc0fd02c0fdd0fde0fdf0fd04d0fde0fdf0fd03c0ffd0ff
e0fff0ff0470410a0425000100c0042500d0042500e0042500f00425400c
04e0bef0be02e0bef0be020f41110421003f04210002001002580001000f
025800e002580002000f040a0001000f0408b4010f26010f411b04070001
000f04060001007f02170001000f029c001f029c002f029c003f029c004f
029c005f029c000600df029c00ef029c00ff029c405303dfe016171cd4d5
16171c7b7c161b7b7c19d1d216171c767716171c6d7016171c6c6f16171c
6b6e161b6b6e7f721a747514151c676a14151c666914151c6568141b6568
85711a1973167a431921794319211941310292009902920002001c029200
2c029200020299029a029b000c028d028e028f000c028a028b028c000c00
1b0299008b02990002000f0299009f029900bb029900db0299000402a502
8b02a7000d029f029a02a1000d029c028e029e000dffe8028eb2142339b9
ffe8029ab2142339411a0282027d0008002b0281027c0005002b027e027a
0004002b027d027a0004002b027a02570005002b027702670005002b0267
0257b2052b20b80270b21b2039bd027202570004002b026e0257b2042b20
b80257b331333909414102710019027100aa025700b80257000400690271
00da025700e802570003028402790006002b028002790004002b027f0279
0008002b027b02790008002b027902560006002b027802660000002b0276
02660008002b027502660008002b027302660008002b026602560006002b
027402560000002b027302560000002b026f0256b2072b29415002560001
008602560001025d025e025f000c025102520253000c024e024f0250000c
000b024e000b0251000a025d003b024e00590251007602510075025d009b
024e00b5025d00d9024e000a0269024f026b000d0263025e0265000d0260
02520262000d0269003c0263003c0260003c025d003c0251003c024e003c
0244023c0005002b024302110002002b0240023c0005002b023e02110004
002b023d0211b2042b464115023c00010046023c00c6023c0002023b0211
0007002b023902110006002b023702110004002b02210211b2072b20b802
33b21316394116022f02110004002b022e02110004002b022d0211000500
2b022c02110004002b022b02110004002b022a0211b2052b474142021100
010005021100a502110002003b0233004b02330064021100740211000402
4202100007002b024102100005002b023f02100002002b023a0210000700
2b023802100007002b023602100007002b023502100007002b0220021000
07002b023402100005002b023102100005002b023002100007002b022902
100007002b02280210b2072b8a416e02100001001a021000b90232000202
1702180219000c020b020c020d000c02080209020a000c000b0208000b02
0b000a0217003b02080059020b0076020b00750217009b020800b5021700
d90208000a022302090225000d021d0218021f000d021a020c021c000d02
23003c021d003c021a003c0217003c020b003c0208003c0153014d000200
2b014e014d0002002b0156015c0004002b0155015c0004002b0157015c00
02002b01da01d4000a002b01d801d4000a002b01e501e00005002b01e101
e00005002b01e001eb0005002b01ef01eb0002002b01ec01ebb2052b40b8
01ebb2090a39b9ffc00104b2313139b9ffc00104b21b2039b8ffc0b4c71f
203940b80103b22c2c39ba010301000100b21f2223b901030100b3c01e1e
23ba010301000100b21d1d23b901030100b3c01c1c23ba010301000100b2
1b1b23b901030100b3c0141a23b901030100b3800b1323b901030100b340
090a23b901020101b340508b23b901010100b340508b23410a0102010000
4f001f01010100004f001fffc00100b2505539b9ffc00100b323233940b8
0100b71d1e3940e81b1b39b8ffc0b4e724253956b80108401301ddd8052b
3bd64bd60240b00b0d39c1c0052bb8ffc040379f131339409c2f30399c9a
012b9b9a052b9a91042ba999042b9992032b40c52c31399291032b889198
910209631863c7630320630d0f39b8fff0b4471f2539cbb8010a401c0198
95012b379e019695022b1897262a3917970110953f4039d99501bc013601
2c0003002b0130b2cd042bb8012fb2cc042bb8012db2cd032bb8012cb2cd
042bbc014c014a0003002b014ab27f052bb9015b0154b2042b0f41190154
001f01540002018601880002002b018701880004002b018901880004002b
0188018f0003002b018e018f0004002b018fb385052b3f410c01a0000101
ce01cc0003002b01d201cc0006002b01d101ccb2062b40b80107b2323239
b80107b2af032bb8ffc0b3de1e2039b8ffc04011dc181a39c9ca032bcac8
042b40c8212239b8ffc0b3c8151739b8ffc0b3c6242539b8ffc0b3c6161a
39b8ffc04023bf2d31395051032b40511b1b39e5cc042be4e3032b40e32a
2a39cdcc052b40cc424439b8ffc0b3cc272739b8ffc0b7cc171a39c2ea01
2bb80109b2da032bb8ffc04033ea252539dfea0140c41b1d39b3b1052bb1
c0052b40c03d3d39c0af042bd3af052baf7d052b20da121639c5bd01208e
01108e01b8ffc0b38b363839b8ffc0b38b272b39b8ffc040328b171a398c
8d052b8d8a042b898a052b8a7f052bf4ef032bf2ef052bf180022bf0a004
2bef85052b40ec32343940ec1b1d39b8ffc0b3a0515239b8ffc0b3a04547
39b8ffc0b3a0383c39b8ffc0400ba02c3139dfa001a080022bb8ffc0b394
313139b8ffc040d480181a39817f012b7e7d052b7d7f052bed7f052bd87f
017f85251f8885012b8785012b8485052b8385052b298539854985036685
014685013685012685011b37151836151535151234150f33150c32150931
15063015032f15002e15f9fa0f20f930f90226270e28270f2a2b0e2c2b0f
22230e24230f1e1f0e201f0f00051005023c3d0e0b3c743c993c030f1011
0c090a0b0c0607080c0304050c0001020c0603641f702a010f2a010b0f4b
0f020b003b0044037403ab00db0f060b000b030b0f3b003b0959035b0976
039b009b09990fd9000cb9010b010c402a0f1b011d0d18071a0d1510170d
1204140d2ff96ff99ff9a0f9cff9d0f9063ff940f9aff9b0f9e0f90500b8
010bb22ff92fba010b003f010b403004fb3cf93cf73cf53c2c3c2a3c283c
263c243c223c203c1e3c1b3c183c153c123c0f3c093c063c033c003c0350
50335401b0124b004b5442b013014b004b5342b0332b4bb8032052b0322b
4bb009505b58b101018e59b0332bb00288b8010054b00488b8020054b012
435a5b58b80119b101018e851bb900010100b04b60858d592b2b1d42b064
4b5358b20380801d4259b0324b5358b20390901d4259004bb03251b01b23
422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7374752b2b2b2b2b
73747573742b2b2b2b2b2b732b732b2b2b2b2b2bb1282645b02a4561b02c
4560442b2b732b2b2b2b2b2b2b2b2b2b2b0173737373742b2b2b2b2b742b
2b2b2b2b2b2b742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7475732b2b
2b2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b732b2b2b2b2b2b732b2b2b012b2b2b2b2b00742b742b2b742b732b
2b74742b2b2b2b2b2b2b2b2b2b2b732b742b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b002b2b2b2b2b2b2b2b2b2b2b2b2b002b2b2b2b2b2b2b
2b2b732b2b2b0173742b2b2b2b2b2b2b2b2b2b2b2b2b007374752b2b2b2b
2b2b2b2b2b2b2b73742b2b2b2b2b002b2b2b2b2b2b2b2b2b732b2b2b0173
742b2b2b2b2b2b2b2b2b2b2b2b2b0073742b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b73742b2b2b0173742b2bb018b03f4b53422b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2bb101322b4bb0505242b002435c4bb064524bb01e505b60b0
1a23424bb0c8524bb036505bb00e23420073747373737373737374737374
7375737374757373747373737373b100024354b102024354b1060243545b
5b58416301fe006401fa006401f9006401f8006401f7006401f6006401f0
006401ef006401ee006401ed006401ec006401eb006401e6006401e50064
01e4006401e3006401e2006401e1006401e0006401d3006401d2006401d1
006401cf006401ce006401cd006401cc006401a00064018f0064018e0064
018a0064018800640187006401860064015b0064015a0064015900640158
00640154006401500064014c0064014b0064014a00640136006401300064
012f0064012d0064012c006401090064010700640105406964f464f264f1
64f064ef64ed64ec64ea64e564e464e364e164de64da64d864d364cd64cc
64ca64c964c864c664c464c264c064bf64bd64b364b164af64a564a464a0
648e648d648c648b648a64896485648464836480647f647e647d64626451
645064486442640e642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b00>
[9287 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 4116 2870 <00010088000003ea050f00330020b51f1d1d1ac722b803ecb2050500b803
f7b10a1e003fed322f3fed322f32313025323e02373306060721353e0337
3e0335342e02232206072335363633321e0215140e02070e050702d62f38
251a115d050905fcb1184050663e5e7644191d3653365d7e238380d75668
935c290b1b2c2119505f6862521aa30718312b4790473436696c733e5e85
68583233563c226560c335302f507041274341422520546068666028>HIBBAA+CIDFont+F2 AddT42Char 
2 5354 3036 <000200a6ffee029405860003002a0029b227e628bb0410002900000411b2
020229b80406b30f0abe15b80409003fed323f332fed10f5ed3130010723
3703060615141633323e0237170e0323222e0235343e0437363435262627
372533026e31c62f290e0b1f1f122429311e4434554c4929263d2c181019
1e1d1705020233410c0122310586d7d7fbd33b461c26220e1e2f21423549
2e141c3144292162737e7c732f080f06272402440b00>HIBBAA+CIDFont+F2 AddT42Char 
2 5866 3041 <00010029ffee050d03fd004b002db5403f3f3abe45b80406b7331e161515
10be1bb80409b22bbe03b80406003fed3fed3211333f3fed321133313001
363633321615140e0415141633323e0237170e0323222e02353436373e03
35342623220e04070323133636353423220e0207273e0333321615140607
020561bd656a69121c201c121c1f132528301e4531524d4c2b243d2c1811
11121f170d2f341e454643382b0a70c4960d0c3b122529301e4532534b4a
294a51070902f4858472671f6e828974520a26220e1e2f214232482f171c
314328286b404177654f1a3e3a1f374b555d2efe0a028c34521a490f1e2e
1f4133492f16614f142c1400>HIBBAA+CIDFont+F2 AddT42Char 
2 3024 1857 <00020069fff0039903cd0019002300284015001000471911961a191a191a
1621950b1016970316003fed3fed1239392f2f10ed10ed38313025060623
222635343e02333216151404210615141633323637253e02353426232206
034561c784919f4d9cda7b7979fec1fec60c525d5c9553fe2a8dca6c3938
65bbc76b6cb19e6bf5c36b6268aaaa3c46695f5053fc01316b5b3d45cc00
>HIBBAA+CIDFont+F2 AddT42Char 
2 3964 2869 <000100b70000040705080029001ab41e21211b25b803edb40d0a540c1e00
3fed323f33331133313001141e02171e03171521353e03373e0335113426
23220607262627363637330e021502db04090f0a0c283e573dfce73b523a
230d0e140c071e1c1f7a610d160c7cf37d3d02020101081f2d1f16080c0d
09050157570205090b080915202e2202cd2720403f172e18448743375752
2800>HIBBAA+CIDFont+F2 AddT42Char 
2 0 0 <000400be0000048605540028002c00300034004b4025152f3428292c002c
1d0b312e342c0b2e2e0b2c3404353600292b30331213130e18182e310300
3fcd322fcd322f3fddd6cd3211120117392f2f2f2f10cd10cd113310cd32
10ddc631300135343e02373e0335342623220e02072335363633321e0215
140e02070e031515171523350111211101112111023706162a2417261b0f
413e2030241909603c894346633e1c0f243c2c20261507129001fcfd0603
61fc3801e71616252a3527192f3339234b521424321e821e2e1d33462926
3e3d462d212c27281c066ea1a1fee4049afb6604f7faac055400>HIBBAA+CIDFont+F2 AddT42Char 
HIBBAA+CIDFont+F2 /CharStrings get begin
/g2870 2870 def
/g3036 3036 def
/g3041 3041 def
/g1857 1857 def
/g2869 2869 def
end
HIBBAA+CIDFont+F2 /Encoding get
dup 32 /g2870 put
dup 33 /g3036 put
dup 34 /g3041 put
dup 127 /g1857 put
dup 129 /g2869 put
pop
end
%ADOEndSubsetFont
/HNSWTE+CIDFont+F2 /HIBBAA+CIDFont+F2 findfont ct_VMDictPut
/HNSWTE+CIDFont+F2*1 
[32{/.notdef}rp /g2870 /g3036 /g3041 92{/.notdef}rp /g1857 /.notdef /g2869 
126{/.notdef}rp]
HNSWTE+CIDFont+F2 nf
HNSWTE+CIDFont+F2*1 [11.52 0 0 -11.52 0 0 ]msf
139.04 66.6643 mo
(\177)sh
HNSWTE+CIDFont+F2*1 [8.40008 0 0 -8.40008 0 0 ]msf
144.203 69.0659 mo
(\201)sh
/HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H findfont [11.52 0 0 -11.52 0 0 ]msf
91.1595 89.7043 mo
(\017a\006\021A\361\031\236)sh
HNSWTE+CIDFont+F2*1 [11.52 0 0 -11.52 0 0 ]msf
137.24 89.7043 mo
(\177)sh
HNSWTE+CIDFont+F2*1 [8.40008 0 0 -8.40008 0 0 ]msf
142.64 92.1046 mo
( )sh
/HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H findfont [11.52 0 0 -11.52 0 0 ]msf
90.4395 141.049 mo
(\017a\006\021A\361\031\236)sh
HNSWTE+CIDFont+F2*1 [11.52 0 0 -11.52 0 0 ]msf
136.52 141.066 mo
(\177)sh
HNSWTE+CIDFont+F2*1 [8.40008 0 0 -8.40008 0 0 ]msf
141.923 143.465 mo
(!)sh
/HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H findfont [11.52 0 0 -11.52 0 0 ]msf
90.4395 218.089 mo
(\017a\006\021A\361\031\236)sh
HNSWTE+CIDFont+F2*1 [11.52 0 0 -11.52 0 0 ]msf
136.52 218.105 mo
(\177)sh
HNSWTE+CIDFont+F2*1 [8.40008 0 0 -8.40008 0 0 ]msf
141.923 220.508 mo
(")sh
%ADOBeginSubsetFont: QJJAAA+CIDFont+F3 Initial
ct_T42Dict begin
-0.5 -0.305 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /QJJAAA+CIDFont+F3
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9dcd85a000000cc000000606376
7420b09bc4d20000012c0000051c6670676d73ee3d400000064800000d17
676c7966d6b76b350000974800001de668656164f30a56fb000013600000
0036686865610dad0c030000139800000024686d74787e350de5000013bc
000031c26c6f6361871a8ea600004580000020406d617870210824e20000
65c0000000206e616d65f02620c7000065e000000d4470726570a1c4507b
0000732400002422676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e00002ff4000acff00000001000000004d53202000400000
20820600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e40598574737271706f6e6d6c
6b6a696867666564625f5e5d5c5b5a59585554535251504f4e4d4c4b4a49
4847464544434241403f3e3d3c3b3a39383736352f2e2d2c282625242322
1f181411100f0d0b0a090807060504030201002c4523466020b02660b004
262348482d2c452346236120b02661b004262348482d2c45234660b02061
20b04660b004262348482d2c4523462361b0206020b02661b02061b00426
2348482d2c45234660b0406120b06660b004262348482d2c4523462361b0
406020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0
cd442320b8015a51582320b08d44235920b0ed51582320b04d44235920b0
042651582320b00d44235921212d2c20204518684420b001602045b04676
688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0
282370b101283e01b0282370b10228453ab10200080d2d2c2045b0032545
6164b050515845441b2121592d2c2045b0004360442d2c01b00643b00743
650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c
58b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c4565b0
2c234445b02b23442d2c4b525845441b2121592d2c01b005251023208af5
00b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b006
2510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c
2d2c00b00743b006430b2d2c21210c6423648bb84000622d2c21b0805158
0c6423648bb82000621bb200402f2b59b002602d2c21b0c051580c642364
8bb81555621bb200802f2b59b002602d2c0c6423648bb84000626023212d
2c4523456023456023456023766818b08062202d2cb00426b00426b00425
b0042545234520b003266062636820b0032661658a2344442d2c2045b000
5458b040442045b04061441b2121592d2c45b1302f4523456160b0016069
442d2c4b5158b02f2370b01423421b2121592d2c4b515820b00325456953
58441b2121591b2121592d2c45b01443b0006063b0016069442d2cb02f45
442d2c452320458a60442d2c45234560442d2c4b235158b90033ffe0b134
201bb3330034005944442d2cb0164358b00326458a586466b01f601b64b0
20606620581b21b04059b001615923586559b02923442310b029e01b2121
212121592d2cb0164358b004254564b020606620581b21b04059b0016123
586559b0292344b00425b00725082058021b0359b0052510b004252046b0
042523423cb0072510b006252046b00425b0016023423c2058011b0059b0
052510b00425b029e0b0072510b00625b029e0b00425b00725082058021b
0359b00425b003254348b00625b00325b0016043481b2159212121212121
212d2cb0164358b004254564b020606620581b21b04059b0016123581b65
59b0292344b00525b00825082058021b0359b0042510b005252046b00425
23423cb00425b0072508b0072510b006252046b00425b0016023423c2058
011b0059b0042510b00525b029e0b02920456544b0072510b00625b029e0
b00525b00825082058021b0359b00525b003254348b00425b0072508b006
25b00325b0016043481b2159212121212121212d2c02b00425202046b004
252342b0052508b003254548212121212d2c02b0032520b0042508b00225
43482121212d2c452320451820b00050205823652359236820b040505821
b04059235865598a60442d2c4b53234b515a5820458a60441b2121592d2c
4b545820458a60441b2121592d2c4b53234b515a58381b2121592d2cb000
214b5458381b2121592d2cb002435458b0462b1b21212121592d2cb00243
5458b0472b1b212121592d2cb002435458b0482b1b21212121592d2cb002
435458b0492b1b212121592d2c2320b000508a8a64b10003255458b0401b
b10103255458b005438b59b04f2b5923b0622b2321235865592d2cb10800
0c215460432d2c014623466023466123201020468a61b8ff80628ab14040
8a704560683a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a59
2d2cb012004b014b54422d2cb1020042b123018851b1400188535a58b910
000020885458b202010243604259b12401885158b920000040885458b202
0202436042b12401885458b2022002436042004b014b5258b20208024360
42591bb940000080885458b202040243604259b94000008063b801008854
58b202080243604259b94000010063b80200885458b202100243604259b1
2601885158b94000020063b80400885458b202400243604259b940000400
63b80800885458b202800243604259b12801885158b94000080063b81000
885458ba00020100000243604259595959595959b10002435458400a0540
084009400c020d021bb10102435458b2054008ba010000090100b30c010d
011bb18002435258b2054008b80180b109401bb901000002435258b20540
08ba0180000901401bb901800002435258b2054008b80200b109401bb205
4008ba010000090100595959b9400000808855b94000020063b804008855
5a58b30c000d011bb30c000d0159595942424242422d2c451868234b5158
2320452064b04050587c59688a6059442d2cb00016b00225b0022501b001
233e00b002233eb10102060cb00a236542b00b234201b001233f00b00223
3fb10102060cb006236542b0072342b00116012d2c20b82000628a602362
2d2cb0072558001b0159b0042510b00325b0022520b8ffff545821cd1bed
5921b006255cb006255a58b0092b5920b005254ab0042547b004254760b0
062547b0806361b00225b0005558b00325b00725496359b0082558001b01
59b00425b0062549b009255cb009255a58b0092b59b0072546b0806361b0
032520b0005558631b2159612320b0005558b080631b21b08059b0592bb0
06255c586959b00425202010b00048233ab0062658001b0159b0052658b0
03252f598a12233221212d2cb00625b00a2587b00625b009254ab0005358
b00625b00a251bb00925b0072559b00225b00225070cb005256323b00625
636020b94000040063535821b00426b00426b00a1bb94000040063655158
b0042665b0042665b00a1bb00426b00426b000b00325b003250b0d0ab009
2eb00725b007250b0d0ab00b2eb00525b0052507595920b0005558b00525
b0052587b00725b007250bb0092510b00b25b0092620b8ffff545821cd1b
ed59b00525b0052507b00825b00b254923b00625b0062587b00a2510b00b
25c15920b00051b800522378b00161b00225b00725b0072507b00a25b00d
254961b08062b00525b005250bb00a252338b00625b0062587b00825b008
250bb00a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ff
a723792121212121212121212121212d2c23b0005458b9400000001bb900
004000598ab0005458b9400000001bb90000400059b05b2b2d2c08b00054
58b9400000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940
0000001bb90000400059b05b2b2d2cb00426b00426080db00426b0042608
0db05b2b2d2cb0022563b0206066b00225b82000626023622d2c20456944
2d2c234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b002
256164b00343525821206459b1024e2b23b000505865592d2c238a4a2345
64b0022564b002256164b00343525821206459b1014e2b23b00050586559
2d2c20b003254ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2c
b00325b003258ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2c
b0032546b003254660b004252eb00425b00425b0042620b000505821b06a
1bb06c592bb0032546b00325466061b08062208a2010233a232010233a2d
2cb0032547b003254760b0052547b0806361b00225b00625496323b00525
4ab080632058621b2159b0042646608a468a4660b02063612d2cb00426b0
0425b00425b00426b06e2b208a2010233a232010233a2d2c2320b0015458
21b00225b1024e2bb0805020605920606020b001515821211b20b0055158
21206661b0402361b100032550b00325b00325505a5820b00325618a5358
21b000591b21591bb00754582066616523211b2121b000595959b1024e2b
2d2cb00225b004254ab0005358b0001b8a8a238ab00159b0042546206661
20b00526b0062649b00526b00526b0702b236165b02060206661b0206165
2d2cb0022546208a20b000505821b1024e2b1b452321596165b00225103b
2d2cb0042620b802006220b80200638a236120b05d602bb00525118a128a
20398a58ba005d10000004266356602b23212010204620b1024e2b23611b
2321208a201049b1024e2b593b2d2cba005d10000009256356602bb00525
b00525b00526b06d2bb15d0725602bb00525b00525b00525b00525b06f2b
ba005d10000008266356602b20b0005258b0502bb00525b00525b00725b0
0725b00525b0712bb0021738b00052b00225b001525a58b00425b0062549
b00325b00525496020b0405258211bb000525820b0025458b00425b00425
b00725b0072549b00217381bb00425b00425b00425b0062549b002173859
5959595921212121212d2cb12501885058b94000020063b8040088545cb0
164b525b1bb001592d000001000000061eb87d56e71c5f0f3cf500190800
00000000bbeb7ccc00000000d20670b8fbfafd8b09ec0836000000090002
000000000000000100000600fe0001c40aa0fbfafaa009ec000100000000
0000000000000000000008c2040e00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000006d700ac000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000046500a100000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000060600a10000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000003ed00a100000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
043400600000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000664009900000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000002ca00990000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000002e50048000000000000000000000000000000000000000000000000
00000000000000000456006c0000000000000000000000000000000001f6
006c00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000005860096000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000335
008b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000002cb002303ec0062
000000000000000000000000000000000000000000000000000000000000
0000040e00ae040e00720000000000000000000000000000000000000000
000000000000000000000000028d00190381005c00000000000000000000
00000000000000000000000000000000000000000000039f008d039f0065
000000000000000000000000000000000000000000000000000000000000
000002cb002303ec00620000000000000000000000000000000000000000
000000000000000000000000040e00ae040e007200000000000000000000
0000000000000000000000000000000000000000000001f8002302b0004b
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000001f8002302b0004b
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000001f500310252003c
000000000000000000000000000000000000000000000000000000000000
000001f500310252003c0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000046d008e00000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000046d008e000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf
00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf
00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf
00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf
00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf01810181018101810181
018101810181018101810181018101810181018101810181018101810181
018101810181018101810181018101810181018101810181018101810181
018101810181018101810181018101810181018101810181018101810181
018101810181018101810181018101810181018101810181018101810181
018101810181018101810181018101810181018101810181018101810181
01810181018101d101d101d101d101d101d101d101d101d101d101d101d1
01d101d101d101d101d101d101d101d101d101d101d101d101d101d101d1
01d101d101d101d101d101d101d101d101d101d101d101d101d101d101d1
01d101d10259025902590259025902590259025902590259025902590259
02590259025902590259025902590259025902e602e602e602e602e602e6
02e602e602e602e602e602e602e602e602e602e602e602e602e602e602e6
02e602e602e602e602e602e602e602e602e602e602e602e602e602e602e6
02e602e602e602e602e602e602e602e602e602e602e602e602e602e602e6
02e602e602e602e602e602e602e602e602e602e602e602e602e602e60395
039503950395039503950395039503950395039503950395039503950395
039503950395039503950395039503950395039503950395039503950395
039503950395039503950395039503950395039503950395039503950395
039503950395039503950395039503950395039503950395039503950395
039503950395039503950395039503950395039503950395039503950395
039503950395039503950395039503950395039503950395039503950395
049004900490049004900490049004900490049004900490049004900490
04900490049004900490049004900490051a051a051a051a051a051a051a
051a051a051a051a051a051a051a051a051a051a051a051a051a051a051a
051a051a051a051a051a051a051a051a051a051a051a051a051a051a051a
051a051a051a051a051a051a051a051a051a051a051a051a051a051a051a
051a051a051a051a051a051a051a051a051a051a051a051a051a051a051a
051a051a051a051a051a051a051a05940594059405940594059405940594
0594062b062b062b062b062b068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e068e068e068e068e068e068e068e068e068e068e068e
068e068e068e068e06e606e606e606e606e606e606e606e606e606e606e6
06e606e606e606e606e606e606e606e606e606e606e606e606e606e606e6
06e606e606e606e606e606e606e606e606e606e606e606e606e606e606e6
06e606e606e606e606e606e606e606e606e606e606e606e606e606e606e6
06e606e606e606e606e606e6073807380738073807380738073807380738
073807380738073807380738073807380738073807380738073807380738
073807380738073807380738073807380738073807380738078a081a081a
081a081a081a081a081a081a081a08870909090909090909090909090909
09090909095909e309e309e309e309e309e309e309e309e30a4e0a560a56
0a560a560a560a560a560a560a560aa30b360b360b360b360b360b360b36
0b360b360c000cbb0cbb0cbb0cbb0cbb0cbb0cbb0cbb0cbb0cc40ccd0ccd
0ccd0ccd0ccd0ccd0ccd0ccd0ccd0ccd0ccd0ccd0ccd0ccd0d1e0d8f0d8f
0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0dde0e540e54
0e540e540e540e540e540e540e540e5d0e660e660e660e660e660e660e66
0e660e660e660e660e660e660e660e660e660e660e660e660e660e660e66
0e660e660e660e660e660e660e660e660e660e660e660e660e660e660e66
0e660e660e660e660e660e660e660e660e660e660e660e660e660e660e66
0e660e660e660e660e660e660e660e660e660e660e660e660e660e660e66
0e660e660e660e660e660e660e660e660e660e660e660e660e660e660e66
0e660e660e660e660e660e660e660e660e660e660e660e660e660e660e66
0e660e660e660e660e660e660e660e660e660e660e660e660e660e660e66
0e660e660e660e660e660e660e660e660e660e660e660e660e660e660e66
0e660e660e660e660e660e660e660e660e660e660e660e660e660e660e66
0e660e660e660e660e660e660e660e660e660e660e660e660e660e660e66
0e660e660e660e660e660e660e660e660e660e660e660e660e660e660e66
0e660e660e660e660e660e660e660e660e660e660e660e660e660e660e66
0e660e660e660e660e660e660e660e660e660e660e660e660e660e660e66
0e660e660e660e660e660e660e660e660e660e660e660e660e660e660e66
0e660e660e660e660e660e660e660e660e660e660e660e660e660e660e66
0e660e660e660e660e660e660e660e660e660e660e660e660e660e660e66
0e660e660e660e660e660e660e660e660e660e660e660e660e660e660e66
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e0e6e
0e6e0e6e0e6e0e6e0e6e0e6e0e6e0ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef30ef3
0ef30ef30ef30ef300010000101f00510005003d000100020010002f0086
0000104b2422000100010000002d02220000000300000000006400000000
000300000001000e00640000000300000002000e03040000000300000003
002403120000000300000004000e00640000000300000005001803360000
000300000006000e006400000003000000070076034e0000000300000008
002a000e0000000300000009002003c4000000030000000a02a000640000
00030000000b005603e4000000030000000c002a043a000000030000000d
02980464000000030000000e006c06fc0001000000000000003207680001
0000000000010007079a0001000000000002000708ea0001000000000003
001808f100010000000000040007079a0001000000000005000c09090001
0000000000060007079a0001000000000007003b09150001000000000008
0015076f000100000000000900100950000100000000000a0150079a0001
00000000000b002b0960000100000000000c0015098b000100000000000d
014c09a0000100000000000e00360aec0003000104090000006400000003
000104090001000e00640003000104090002000e03040003000104090003
002403120003000104090004000e00640003000104090005001803360003
000104090006000e006400030001040900070076034e0003000104090008
002a000e0003000104090009002003c4000300010409000a02a000640003
00010409000b005603e4000300010409000c002a043a000300010409000d
02980464000300010409000e006c06fc00a9002000320030003100350020
004d006900630072006f0073006f0066007400200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e00430061
006c0069006200720069002000690073002000610020006d006f00640065
0072006e002000730061006e007300200073006500720069006600200066
0061006d0069006c00790020007700690074006800200073007500620074
006c006500200072006f0075006e00640069006e006700730020006f006e
0020007300740065006d007300200061006e006400200063006f0072006e
006500720073002e00200049007400200066006500610074007500720065
00730020007200650061006c0020006900740061006c006900630073002c
00200073006d0061006c006c00200063006100700073002c00200061006e
00640020006d0075006c007400690070006c00650020006e0075006d0065
00720061006c00200073006500740073002e002000490074007300200070
0072006f0070006f007200740069006f006e007300200061006c006c006f
00770020006800690067006800200069006d007000610063007400200069
006e002000740069006700680074006c007900200073006500740020006c
0069006e006500730020006f0066002000620069006700200061006e0064
00200073006d0061006c006c0020007400650078007400200061006c0069
006b0065002e002000430061006c0069006200720069002700730020006d
0061006e0079002000630075007200760065007300200061006e00640020
0074006800650020006e0065007700200072006100730074006500720069
0073006500720020007400650061006d00200075007000200069006e0020
006200690067006700650072002000730069007a0065007300200074006f
002000720065007600650061006c002000610020007700610072006d0020
0061006e006400200073006f006600740020006300680061007200610063
007400650072002e0052006500670075006c00610072004d006900630072
006f0073006f00660074003a002000430061006c00690062007200690056
0065007200730069006f006e00200036002e0031003200430061006c0069
00620072006900200069007300200061002000740072006100640065006d
00610072006b0020006f006600200074006800650020004d006900630072
006f0073006f00660074002000670072006f007500700020006f00660020
0063006f006d00700061006e006900650073002e004c0075006300280061
00730029002000640065002000470072006f006f00740068007400740070
003a002f002f007700770077002e006d006900630072006f0073006f0066
0074002e0063006f006d002f007400790070006f00670072006100700068
0079002f006300740066006f006e007400730068007400740070003a002f
002f0066006f006e007400660061006200720069006b002e0063006f006d
0059006f00750020006d0061007900200075007300650020007400680069
007300200066006f006e00740020006100730020007000650072006d0069
00740074006500640020006200790020007400680065002000450055004c
004100200066006f00720020007400680065002000700072006f00640075
0063007400200069006e0020007700680069006300680020007400680069
007300200066006f006e007400200069007300200069006e0063006c0075
00640065006400200074006f00200064006900730070006c006100790020
0061006e00640020007000720069006e007400200063006f006e00740065
006e0074002e00200059006f00750020006d006100790020006f006e006c
0079002000280069002900200065006d0062006500640020007400680069
007300200066006f006e007400200069006e00200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
002000620079002000740068006500200065006d00620065006400640069
006e00670020007200650073007400720069006300740069006f006e0073
00200069006e0063006c007500640065006400200069006e002000740068
0069007300200066006f006e0074003b00200061006e0064002000280069
00690029002000740065006d0070006f0072006100720069006c00790020
0064006f0077006e006c006f006100640020007400680069007300200066
006f006e007400200074006f002000610020007000720069006e00740065
00720020006f00720020006f00740068006500720020006f007500740070
00750074002000640065007600690063006500200074006f002000680065
006c00700020007000720069006e007400200063006f006e00740065006e
0074002e0068007400740070003a002f002f007700770077002e006d0069
00630072006f0073006f00660074002e0063006f006d002f007400790070
006f006700720061007000680079002f0066006f006e00740073002f0064
0065006600610075006c0074002e0061007300700078a92032303135204d
6963726f736f667420436f72706f726174696f6e2e20416c6c2052696768
74732052657365727665642e43616c696272692069732061206d6f646572
6e2073616e732073657269662066616d696c79207769746820737562746c
6520726f756e64696e6773206f6e207374656d7320616e6420636f726e65
72732e204974206665617475726573207265616c206974616c6963732c20
736d616c6c20636170732c20616e64206d756c7469706c65206e756d6572
616c20736574732e204974732070726f706f7274696f6e7320616c6c6f77
206869676820696d7061637420696e2074696768746c7920736574206c69
6e6573206f662062696720616e6420736d616c6c207465787420616c696b
652e2043616c696272692773206d616e792063757276657320616e642074
6865206e65772072617374657269736572207465616d20757020696e2062
69676765722073697a657320746f2072657665616c2061207761726d2061
6e6420736f6674206368617261637465722e526567756c61724d6963726f
736f66743a2043616c696272693a203230303556657273696f6e20362e31
3243616c6962726920697320612074726164656d61726b206f6620746865
204d6963726f736f66742067726f7570206f6620636f6d70616e6965732e
4c7563286173292064652047726f6f74687474703a2f2f7777772e6d6963
726f736f66742e636f6d2f7479706f6772617068792f6374666f6e747368
7474703a2f2f666f6e7466616272696b2e636f6d596f75206d6179207573
65207468697320666f6e74206173207065726d6974746564206279207468
652045554c4120666f72207468652070726f6475637420696e2077686963
68207468697320666f6e7420697320696e636c7564656420746f20646973
706c617920616e64207072696e7420636f6e74656e742e20596f75206d61
79206f6e6c792028692920656d626564207468697320666f6e7420696e20
636f6e74656e74206173207065726d69747465642062792074686520656d
62656464696e67207265737472696374696f6e7320696e636c7564656420
696e207468697320666f6e743b20616e6420286969292074656d706f7261
72696c7920646f776e6c6f6164207468697320666f6e7420746f20612070
72696e746572206f72206f74686572206f75747075742064657669636520
746f2068656c70207072696e7420636f6e74656e742e687474703a2f2f77
77772e6d6963726f736f66742e636f6d2f7479706f6772617068792f666f
6e74732f64656661756c742e6173707800>
<b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143404114801f85
8503251f8403381f8301381f8255805581ab80557f557d557eab7d550b7d
010b7d1b7d4b7d7b7dab7ddb7d060a7c557a557bab7a557955775578ab77
55ba028600660285403c5576ab755504751475747503f47501ab75014475
0130750102007510752075030c7455725573ab7255007250728072b07204
3bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c720d104671556f
5570ab6f556e666d556a03251f6938675568ab67556638645565ab645563
386255613860555f385d555eab5d555c385a555bab5a5559385855570325
1f5638545555ab54555338515552ab51554f384e554e03251f4d384b554c
ab4b554a38485549ab4855473846554503381f001c101c201c0310b8ffc0
404e1c1b1e46001b0142301b401be01bf01b04001bb01bc01b03120f1a1f
1a02290f1901434f19016f197f198f19030f18cf18024018292c460f17cf
17df17ef1704134017292e460016101620160315b8ffc0b3164d5446b8ff
c0b3163f4446b8ffc0b316313546b8ffc0401f162326460f15010f151f15
0245ef1501850003012001010001100120010308b8ffc0b401151f4603bd
0100010000050001019000542b4bb80800524bb008505bb00188b02553b0
0188b040515ab00688b000555a5b58b101018e59b101024354b0144b515a
58b101018e59858d8d001d424bb01d5358b203a0a01d42594bb0805358b2
0340401d42594bb0ff5358b20300001d42592b5e7375732b58404a080011
e011f0110315bf10cf10020f0f010f0fff0f020f0e1f0e020f0e1f0eff0e
030f0d1f0d020f0d1f0dff0d03160f0b1f0b02553f0b4f0b0208400f3135
46400e313746400d313746b8ffc0400e0c505446400b3f4346400b2d3046
2b2b2b2b2b2b5e745e735e737473747374745e735e5901755e73742b2b2b
2b5e732b5e732b7374755e735e735e73755e732b5e73002b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b
5e735f73737373742b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b58b80142b2
12461fb80141b212461fb80140b212461fb8013fb212461fb8013eb21244
1fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b1fb8
0139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb80135
b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131b211
551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211591f
b8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1fb801
28b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb80124b2
11561fb80123b211571fb80122b211581fb80121b211591fb80120b2115a
1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b1fb8
011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb80117
b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113b210
5f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb2105f1f
b8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1fb801
0ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb80106b2
105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2105f
1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641ffc0f
621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f641f
f40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641fed0f
621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e671f
e50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681fde0e
681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d311f
d60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1fcf0d
2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1f
c70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f40d4
c00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741fb90c
741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c741f
b10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b
7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1f
a20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b
7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b7e1f
930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0a
a71f2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b1b59012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
b1000243545841ff0284006402830064028200640281006402800064027f
0064027e0064027d0064027c0064027b0064027a00640279006402780064
02770064027600640275006402740064027300640271006402700064026f
0064026e0064026d0064026c0064026b0064026a00640269006402680064
026700640266006402650064026400640263006402620064026100640260
0064025f0064025e0064025d0064025c0064025b0064025a006402590064
025800640257006402560064025500640254006402530064025200640251
006402500064024f0064024e0064024d0064024c0064024b0064024a0064
024900640248006402470064024600640245006402440064024300640242
00640241006402400064023f0064023e0064023d0064023c0064023b0064
023a00640239006402380064023700640236006402350064023400640233
0064023200640231006402300064022f0064022e0064022d0064022c0064
022b0064022a006402290064022800640227006402260064022500640224
006402230064022200640221006402200064021f0064021e0064021d0064
021c0064021b0064021a0064021900640218006402170064021600640215
00640214006402130064021200640211006402100064020f0064020e0064
020d0064020c0064020b0064020a00640209006402080064020700640206
006402050064020441ff00640203006402020064020100640200006401ff
006401fe006401fd006401fc006401fb006401fa006401f9006401f80064
01f7006401f6006401f5006401f4006401f3006401f2006401f1006401f0
006401ef006401ee006401ed006401ec006401eb006401ea006401e90064
01e8006401e7006401e6006401e5006401e4006401e3006401e2006401e1
006401e0006401df006401de006401dd006401dc006401db006401da0064
01d9006401d8006401d7006401d6006401d5006401d4006401d3006401d2
006401d1006401d0006401cf006401ce006401cd006401cc006401cb0064
01ca006401c9006401c8006401c7006401c6006401c5006401c4006401c3
006401c2006401c1006401c0006401bf006401be006401bd006401bc0064
01bb006401ba006401b9006401b8006401b7006401b6006401b5006401b4
006401b3006401b2006401b1006401b0006401af006401ae006401ad0064
01ac006401ab006401aa006401a9006401a8006401a7006401a6006401a5
006401a4006401a3006401a2006401a1006401a00064019f0064019e0064
019d0064019c0064019b0064019a00640199006401980064019700640196
0064019500640194006401930064019200640191006401900064018f0064
018e0064018d0064018c0064018b0064018a006401890064018800640187
006401860064018500644180018400640183006401820064018100640180
0064017f0064017e0064017d0064017c0064017b0064017a006401790064
017800640177006401760064017500640174006401730064017200640171
006401700064016f0064016e0064016d0064016c0064016b0064016a0064
016900640168006401670064016600640165006401640064016300640162
00640161006401600064015f0064015e0064015d0064015c0064015b0064
015a00640159006401580064015700640156006401550064015400640153
00640152006401500064014f0064014e0064014c0064014b0064014a0064
014900640148006401470064014600640145006401440064014300642b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b185f5e000000>
[7655 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 3356 857 <00030096fff704f000de000b001700230044b0852b58bf0018027c001e00
0c027b00120000027cb7062115091b0f034c003f3333cd3232012fe12fe1
2fe131301bb7211509401b0f034c00183f33331acd323230315925140623
222635343633321605140623222635343633321605140623222635343633
321601692f3c3a2e2f3c3a2e01c32e3c3a2e2f3b3b2d01c42f3c3a2e2f3c
3a2e6c462f2e44462f2e44462f2e44462f2e44462f2e44462f2e>QJJAAA+CIDFont+F3 AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e0097b0852b58bc000d01
520016003a01b5b5154444082d07be014300020020015400080001014340
0f04020db71a1a3f23b735068d031149b8012db43f078d0202003ffddefd
ce2ffddeed12392fed012fdde1dee110f1ce11392f33e1d4e131301b4014
1a0db76c1a1a3f3523b76c3503068d6c03113f49b8012d40096c3f400207
8d6c020200183f2b1ace2bce2f2bce2b12392f2b30315901112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>QJJAAA+CIDFont+F3 AddT42Char 
QJJAAA+CIDFont+F3 /CharStrings get begin
/ellipsis 857 def
end
QJJAAA+CIDFont+F3 /Encoding get
dup 133 /ellipsis put
pop
end
%ADOEndSubsetFont
/HNSWTF+CIDFont+F3 /QJJAAA+CIDFont+F3 findfont ct_VMDictPut
/HNSWTF+CIDFont+F3*1 
[133{/.notdef}rp /ellipsis 122{/.notdef}rp]
HNSWTF+CIDFont+F3 nf
HNSWTF+CIDFont+F3*1 [0 14.88 14.88 0 0 0 ]msf
117.561 106.866 mo
(\205)sh
116.363 158.823 mo
(\205\205)
[26.6354 0 ]ysh
152.36 59.7043 mo
153.32 59.7043 li
154.4 59.8243 li
155.24 59.8243 li
156.08 59.9443 li
156.68 60.0643 li
157.16 60.3043 li
157.4 60.3043 li
157.52 60.4243 li
157.64 60.5443 li
157.76 60.7843 li
157.76 73.0243 li
157.64 72.9043 li
157.76 73.0243 li
157.64 72.9043 li
157.76 73.0243 li
157.88 73.0243 li
158 73.1443 li
158.48 73.2643 li
159.08 73.3843 li
159.8 73.5043 li
160.64 73.6243 li
161.6 73.6243 li
164.36 73.6243 li
164.36 73.9843 li
161.6 74.1043 li
160.64 74.1043 li
159.8 74.2243 li
159.08 74.3443 li
158.48 74.4643 li
158 74.5843 li
157.88 74.7043 li
157.88 74.5843 li
157.76 74.7043 li
157.64 74.7043 li
157.76 74.7043 li
157.64 74.8243 li
157.76 74.7043 li
157.76 86.9443 li
157.64 87.0643 li
157.52 87.3043 li
157.4 87.3043 li
157.16 87.4243 li
156.68 87.5443 li
156.08 87.7843 li
155.24 87.7843 li
154.4 87.9043 li
153.32 88.0243 li
152.36 88.0243 li
152.36 87.5443 li
153.32 87.5443 li
154.28 87.5443 li
155.24 87.4243 li
155.96 87.3043 li
156.56 87.1843 li
157.04 87.0643 li
157.16 86.9443 li
157.28 86.9443 li
157.28 86.8243 li
157.28 86.9443 li
157.28 86.8243 li
157.28 86.9443 li
157.28 74.7043 li
157.4 74.4643 li
157.52 74.3443 li
157.64 74.2243 li
157.88 74.2243 li
158.36 73.9843 li
158.96 73.8643 li
159.8 73.7443 li
160.64 73.7443 li
161.6 73.6243 li
162.68 73.6243 li
162.68 74.1043 li
161.6 73.9843 li
160.64 73.9843 li
159.8 73.8643 li
158.96 73.7443 li
158.36 73.6243 li
157.88 73.5043 li
157.64 73.3843 li
157.52 73.2643 li
157.4 73.1443 li
157.28 73.0243 li
157.28 60.7843 li
157.28 60.9043 li
157.28 60.7843 li
157.16 60.6643 li
157.04 60.6643 li
156.56 60.5443 li
155.96 60.4243 li
155.24 60.3043 li
154.28 60.1843 li
153.32 60.1843 li
152.36 60.0643 li
cp
f
149.72 97.3843 mo
151.4 97.3843 li
152.96 97.5043 li
154.28 97.6243 li
155 97.6243 li
155.6 97.7443 li
156.08 97.8643 li
156.56 97.9843 li
157.04 98.1043 li
157.4 98.2243 li
157.64 98.3443 li
157.88 98.4643 li
158 98.7043 li
158.12 98.9443 li
158.12 112.264 li
158.12 112.144 li
158.12 112.384 li
158.12 112.264 li
158.24 112.384 li
158.36 112.504 li
158.6 112.624 li
158.96 112.744 li
159.32 112.864 li
159.8 112.864 li
160.4 112.984 li
160.88 113.104 li
161.6 113.224 li
162.92 113.344 li
164.48 113.344 li
167.72 113.464 li
167.72 113.824 li
164.48 113.824 li
162.92 113.944 li
161.6 114.064 li
160.88 114.184 li
160.4 114.184 li
159.8 114.304 li
159.32 114.424 li
158.96 114.544 li
158.6 114.664 li
158.36 114.784 li
158.24 114.904 li
158.24 114.784 li
158.12 115.024 li
158.12 114.904 li
158.12 115.024 li
158.12 128.344 li
158 128.584 li
157.88 128.704 li
157.64 128.944 li
157.4 129.064 li
157.04 129.184 li
156.56 129.304 li
156.08 129.424 li
155.6 129.424 li
155 129.544 li
154.28 129.664 li
152.96 129.784 li
151.4 129.784 li
149.72 129.904 li
149.72 129.424 li
151.4 129.424 li
152.96 129.304 li
154.28 129.184 li
154.88 129.184 li
155.48 129.064 li
155.96 128.944 li
156.44 128.824 li
156.92 128.704 li
157.16 128.584 li
157.52 128.464 li
157.4 128.584 li
157.64 128.464 li
157.76 128.344 li
157.64 128.344 li
157.76 128.224 li
157.76 128.344 li
157.76 114.904 li
157.76 114.784 li
158 114.544 li
158.24 114.424 li
158.48 114.304 li
158.84 114.184 li
159.32 114.064 li
159.8 113.944 li
160.28 113.824 li
160.88 113.704 li
161.48 113.584 li
162.92 113.464 li
164.48 113.464 li
166.04 113.464 li
166.04 113.824 li
164.48 113.824 li
162.92 113.704 li
161.48 113.584 li
160.88 113.464 li
160.28 113.464 li
159.8 113.344 li
159.32 113.224 li
158.84 113.104 li
158.48 112.984 li
158.24 112.864 li
158 112.744 li
157.76 112.504 li
157.76 112.264 li
157.76 98.9443 li
157.64 98.8243 li
157.76 98.9443 li
157.64 98.8243 li
157.4 98.7043 li
157.52 98.7043 li
157.16 98.5843 li
156.92 98.4643 li
156.44 98.3443 li
155.96 98.2243 li
155.48 98.2243 li
154.88 98.1043 li
154.28 97.9843 li
152.96 97.8643 li
151.4 97.7443 li
149.72 97.7443 li
cp
f
153.08 185.824 mo
154.4 185.944 li
155.6 185.944 li
156.8 186.064 li
157.76 186.184 li
158.24 186.304 li
158.6 186.424 li
158.96 186.424 li
159.32 186.544 li
159.56 186.664 li
159.68 186.784 li
159.92 187.024 li
159.92 187.144 li
159.92 201.064 li
159.92 200.944 li
159.92 201.064 li
159.92 200.944 li
160.04 201.064 li
160.16 201.184 li
160.28 201.304 li
160.64 201.304 li
160.88 201.424 li
161.36 201.544 li
161.72 201.544 li
162.68 201.784 li
163.88 201.784 li
165.08 201.904 li
168.08 201.904 li
168.08 202.264 li
165.08 202.384 li
163.88 202.384 li
162.68 202.504 li
161.72 202.624 li
161.24 202.744 li
161.36 202.744 li
160.88 202.864 li
160.64 202.864 li
160.28 202.984 li
160.4 202.984 li
160.16 203.104 li
159.92 203.224 li
160.04 203.104 li
159.92 203.224 li
159.92 203.344 li
159.92 203.224 li
159.92 217.144 li
159.92 217.264 li
159.68 217.384 li
159.56 217.624 li
159.32 217.744 li
158.96 217.744 li
158.6 217.864 li
158.24 217.984 li
157.76 218.104 li
156.8 218.224 li
155.6 218.344 li
154.4 218.344 li
153.08 218.344 li
152.96 217.984 li
154.4 217.984 li
155.6 217.864 li
156.8 217.744 li
157.76 217.624 li
158.12 217.624 li
158.6 217.504 li
158.48 217.504 li
158.84 217.384 li
159.2 217.264 li
159.08 217.264 li
159.32 217.264 li
159.44 217.144 li
159.56 217.024 li
159.44 217.144 li
159.56 217.024 li
159.56 203.224 li
159.56 202.984 li
159.68 202.864 li
159.92 202.744 li
160.16 202.624 li
160.52 202.504 li
160.88 202.384 li
161.24 202.384 li
161.72 202.264 li
162.68 202.144 li
163.76 202.024 li
165.08 201.904 li
166.4 201.904 li
166.4 202.384 li
165.08 202.264 li
163.76 202.264 li
162.68 202.144 li
161.72 202.024 li
161.24 201.904 li
160.88 201.784 li
160.52 201.784 li
160.16 201.664 li
159.92 201.544 li
159.68 201.424 li
159.56 201.184 li
159.56 201.064 li
159.56 187.144 li
159.56 187.264 li
159.44 187.144 li
159.56 187.264 li
159.44 187.144 li
159.32 187.024 li
159.08 186.904 li
159.2 186.904 li
158.84 186.904 li
158.48 186.784 li
158.12 186.664 li
157.76 186.664 li
156.8 186.424 li
155.6 186.424 li
154.4 186.304 li
152.96 186.304 li
cp
f
HNSWTF+CIDFont+F3*1 [0 14.88 14.88 0 0 0 ]msf
179.719 140.826 mo
(\205\205)
[31.2481 0 ]ysh
210.32 73.6243 mo
259.28 73.6243 li
259.28 74.1043 li
210.32 74.1043 li
210.32 73.6243 li
cp
258.44 71.3443 mo
263.48 73.8643 li
258.44 76.2643 li
258.44 71.3443 li
cp
f
%ADOBeginSubsetFont: HIBBAA+CIDFont+F2 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HNSWTE+CIDFont+F2 gcheck setglobal} if
2 3174 1866 <00010018fff0047f03cd003a002a40163a15242323209e27161233971510
09080811059e0c10003fed32322f333fed323fed322f333f313001363534
262322060727363633321615140717363633321615140703061514163332
363717060623222635343737363635342623220e020703230111161a1c1f
453c395c7a4d3f49180c62b15e5d641d411b1a1c1e443e39568052414e21
2c180f2e342a616d42155fad027a60342824334338605153433541048a85
6b5f3f74fefa6d2d28243145385c555d48417ead5e5a1c453d43877f5dfe
4f00>HNSWTE+CIDFont+F2 AddT42Char 
2 3774 2019 <0001000ffff004150597002f002d400b2f152c0c2221211e9e250db8fff0
40090d0c0c251609971001003fed3f392fcd3810ed322f3311393f313037
363637012e032322060727363633321616151407070615141e0233323637
1706062322262635341323000323192e5c4201c001101c2e28214441345c
793c4d522202040809141e161a3b2b38417f31393c1b150afed499cb3138
795d027c668a5126263b3a5b41489b95315d9ee18168753c15232e38424a
2e6a678e0143fe48fef8>HNSWTE+CIDFont+F2 AddT42Char 
2 2288 481 <00010018feec014300e8000d003cb0852b58401206b2c00d40090d480d06
070d02b10b0b0f0e1112392fe1c6c632002f2b1aec31301b400906b2c00d
40090d480d00182f2b1aec30315925161514060607273e0235342701350e
30695c36332e1407e84644467473453d304d624a4c4a>HNSWTE+CIDFont+F2 AddT42Char 
HNSWTE+CIDFont+F2 /CharStrings get begin
/g1866 1866 def
/g2019 2019 def
/comma 481 def
end
HNSWTE+CIDFont+F2 /Encoding get
dup 35 /g1866 put
dup 36 /g2019 put
dup 44 /comma put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HNSWTE+CIDFont+F2*1 
[32{/.notdef}rp /g2870 /g3036 /g3041 /g1866 /g2019 7{/.notdef}rp /comma 
82{/.notdef}rp /g1857 /.notdef /g2869 126{/.notdef}rp]
HNSWTE+CIDFont+F2 nf
HNSWTE+CIDFont+F2*1 [11.52 0 0 -11.52 0 0 ]msf
215.36 68.5824 mo
(#)sh
HNSWTE+CIDFont+F2*1 [8.40008 0 0 -8.40008 0 0 ]msf
221.724 70.9854 mo
(\201)sh
HNSWTE+CIDFont+F2*1 [11.52 0 0 -11.52 0 0 ]msf
227.121 68.5824 mo
(,)sh
231.318 68.5824 mo
($)sh
HNSWTE+CIDFont+F2*1 [8.40008 0 0 -8.40008 0 0 ]msf
237.085 70.9854 mo
(\201)sh
210.68 114.904 mo
260 114.424 li
260 114.064 li
210.68 114.424 li
210.68 114.904 li
cp
259.28 116.704 mo
264.2 114.184 li
259.16 111.784 li
259.28 116.704 li
cp
f
HNSWTE+CIDFont+F2*1 [11.52 0 0 -11.52 0 0 ]msf
217.88 106.506 mo
(#)sh
HNSWTE+CIDFont+F2*1 [8.40008 0 0 -8.40008 0 0 ]msf
224.483 108.905 mo
( )sh
HNSWTE+CIDFont+F2*1 [11.52 0 0 -11.52 0 0 ]msf
229.878 106.506 mo
(,)sh
234.08 106.506 mo
($)sh
HNSWTE+CIDFont+F2*1 [8.40008 0 0 -8.40008 0 0 ]msf
240.082 108.905 mo
( )sh
210.68 201.904 mo
260 201.904 li
260 201.544 li
210.68 201.544 li
210.68 201.904 li
cp
259.16 204.184 mo
264.2 201.784 li
259.16 199.264 li
259.16 204.184 li
cp
f
%ADOBeginSubsetFont: HIBBAA+CIDFont+F2 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HNSWTE+CIDFont+F2 gcheck setglobal} if
2 5526 3040 <00010029ffee075703fd00680040b54d4c4c47be52b80409b261be37b804
06b53029010bbe2db80406b51e1d1d18be23b80406b3111e011e003f3f3f
ed3211333fed1239393fed3fed321133313021233e0535342623220e0207
0323133636353423220e0207273e03333216151406071736363332161514
140733363633321615140e02070e0315141633323e0237170e0323222e02
3534373e0335342623220e040703bbc30e2324211a103136306e634e1066
c4960d0c3b122529301e4531534d4a284a5106080c5fbe646a6902045db8
646a69141d220f090b06021c1f122429311e4530534d4c2a263e2b182313
1f160d2f321f4647443a2d0c409396927f651e3f3b4875934bfe24028c36
501a490f1e2e1f4132492f17614f162a140585846d6a0911097f7b72671f
697e873c273121180e26220e1e2f214232482f171c31432852814177654f
1a3e3a20394e5b643300>HNSWTE+CIDFont+F2 AddT42Char 
HNSWTE+CIDFont+F2 /CharStrings get begin
/g3040 3040 def
end
HNSWTE+CIDFont+F2 /Encoding get
dup 37 /g3040 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HNSWTE+CIDFont+F2*1 
[32{/.notdef}rp /g2870 /g3036 /g3041 /g1866 /g2019 /g3040 6{/.notdef}rp 
/comma 82{/.notdef}rp /g1857 /.notdef /g2869 126{/.notdef}rp]
HNSWTE+CIDFont+F2 nf
HNSWTE+CIDFont+F2*1 [11.52 0 0 -11.52 0 0 ]msf
215.118 194.464 mo
(#)sh
HNSWTE+CIDFont+F2*1 [8.40008 0 0 -8.40008 0 0 ]msf
221.724 196.868 mo
(%)sh
HNSWTE+CIDFont+F2*1 [11.52 0 0 -11.52 0 0 ]msf
230.12 194.464 mo
(,)sh
234.44 194.464 mo
($)sh
HNSWTE+CIDFont+F2*1 [8.40008 0 0 -8.40008 0 0 ]msf
240.443 196.868 mo
(%)sh
HNSWTF+CIDFont+F3*1 [0 14.88 14.88 0 0 0 ]msf
232.518 142.264 mo
(\205)sh
233.238 171.785 mo
(\205)sh
197.36 23.4643 mo
197.36 15.4243 235.64 8.82425 282.8 8.82425 cv
329.96 8.82425 368.24 15.4243 368.24 23.4643 cv
368.24 31.6243 329.96 38.1043 282.8 38.1043 cv
235.64 38.1043 197.36 31.6243 197.36 23.4643 cv
cp
.333379 .159304 0 0 cmyk
ef
197 23.4643 mo
197 23.1043 li
197.12 22.6243 li
197.24 22.2643 li
197.48 21.7843 li
197.72 21.4243 li
198.08 20.9443 li
198.44 20.5843 li
198.92 20.2243 li
199.4 19.8643 li
199.88 19.5043 li
200.48 19.1443 li
201.08 18.7843 li
201.68 18.4243 li
202.4 18.0643 li
203.12 17.7043 li
203.96 17.4643 li
204.8 17.1043 li
205.76 16.7443 li
207.56 16.1443 li
209.72 15.5443 li
211.88 14.9443 li
214.28 14.3443 li
216.8 13.7443 li
219.56 13.2643 li
222.32 12.7843 li
225.32 12.3043 li
228.44 11.8243 li
231.68 11.3443 li
235.04 10.9843 li
238.52 10.6243 li
242.12 10.2643 li
245.72 9.90427 li
249.56 9.54428 li
253.4 9.30426 li
257.36 9.06427 li
261.44 8.94427 li
265.64 8.70428 li
269.84 8.58429 li
274.04 8.46426 li
278.36 8.46426 li
282.8 8.46426 li
287.24 8.46426 li
291.56 8.58429 li
295.88 8.58429 li
300.08 8.70428 li
304.16 8.94427 li
308.24 9.06427 li
312.2 9.30426 li
316.16 9.66428 li
319.88 9.90427 li
323.6 10.2643 li
327.2 10.6243 li
330.68 10.9843 li
334.04 11.3443 li
337.28 11.8243 li
340.4 12.3043 li
343.28 12.7843 li
346.16 13.2643 li
348.8 13.7443 li
351.44 14.3443 li
353.72 14.9443 li
356 15.5443 li
358.04 16.1443 li
359.96 16.7443 li
360.92 17.1043 li
361.76 17.4643 li
362.48 17.7043 li
363.2 18.0643 li
363.92 18.4243 li
364.64 18.7843 li
365.24 19.1443 li
365.84 19.5043 li
366.32 19.8643 li
366.8 20.2243 li
367.16 20.5843 li
367.64 20.9443 li
367.88 21.4243 li
368.12 21.7843 li
368.36 22.2643 li
368.6 22.6243 li
368.6 23.1043 li
368.72 23.4643 li
368.6 23.9443 li
368.6 24.3043 li
368.36 24.7843 li
368.12 25.1443 li
367.88 25.6243 li
367.64 25.9843 li
367.16 26.3443 li
366.8 26.7043 li
366.32 27.1843 li
365.84 27.5443 li
365.24 27.9043 li
364.64 28.1443 li
363.92 28.5043 li
363.2 28.8643 li
362.48 29.2243 li
361.76 29.5843 li
360.92 29.9443 li
359.96 30.1843 li
358.04 30.9043 li
356 31.5043 li
353.72 32.1043 li
351.44 32.7043 li
348.8 33.1843 li
346.16 33.7843 li
343.28 34.2643 li
340.28 34.7443 li
337.28 35.2243 li
334.04 35.5843 li
330.68 36.0643 li
327.2 36.4243 li
323.6 36.7843 li
319.88 37.0243 li
316.16 37.3843 li
312.2 37.6243 li
308.24 37.8643 li
304.16 38.1043 li
300.08 38.2243 li
295.88 38.3443 li
291.56 38.4643 li
287.24 38.4643 li
282.8 38.4643 li
278.48 38.4643 li
274.16 38.4643 li
269.84 38.3443 li
265.64 38.2243 li
261.44 38.1043 li
257.36 37.8643 li
253.4 37.6243 li
249.56 37.3843 li
245.72 37.1443 li
242.12 36.7843 li
238.52 36.4243 li
235.04 36.0643 li
231.68 35.5843 li
228.44 35.2243 li
225.32 34.7443 li
222.32 34.2643 li
219.56 33.7843 li
216.8 33.1843 li
214.28 32.7043 li
211.88 32.1043 li
209.72 31.5043 li
207.56 30.9043 li
205.76 30.1843 li
204.8 29.9443 li
203.96 29.5843 li
203.12 29.2243 li
202.4 28.8643 li
201.68 28.5043 li
201.08 28.1443 li
200.48 27.9043 li
199.88 27.5443 li
199.4 27.1843 li
198.92 26.7043 li
198.44 26.3443 li
198.08 25.9843 li
197.72 25.6243 li
197.48 25.1443 li
197.24 24.7843 li
197.12 24.3043 li
197 23.9443 li
197 23.4643 li
cp
197.84 23.8243 mo
197.84 23.8243 li
197.96 24.1843 li
197.96 24.0643 li
198.08 24.4243 li
198.2 24.7843 li
198.44 25.1443 li
198.68 25.5043 li
198.68 25.3843 li
199.04 25.7443 li
199.4 26.1043 li
199.88 26.4643 li
200.36 26.8243 li
200.84 27.1843 li
201.44 27.4243 li
202.04 27.7843 li
202.76 28.1443 li
203.48 28.5043 li
204.32 28.7443 li
205.16 29.1043 li
206 29.4643 li
207.92 30.0643 li
207.8 30.0643 li
209.96 30.6643 li
209.84 30.6643 li
212.12 31.2643 li
214.52 31.8643 li
217.04 32.3443 li
219.68 32.9443 li
222.56 33.4243 li
225.44 33.9043 li
228.56 34.3843 li
231.8 34.8643 li
231.8 34.7443 li
235.16 35.2243 li
238.64 35.5843 li
242.12 35.9443 li
245.84 36.3043 li
249.68 36.5443 li
253.52 36.7843 li
257.48 37.0243 li
261.56 37.2643 li
265.64 37.3843 li
269.84 37.5043 li
274.16 37.6243 li
278.48 37.6243 li
282.8 37.7443 li
287.24 37.6243 li
291.56 37.6243 li
295.76 37.5043 li
300.08 37.3843 li
304.16 37.2643 li
308.24 37.0243 li
312.2 36.7843 li
316.04 36.5443 li
319.88 36.3043 li
323.48 35.9443 li
327.08 35.5843 li
330.56 35.2243 li
333.92 34.7443 li
337.16 34.3843 li
340.16 33.9043 li
343.16 33.4243 li
346.04 32.9443 li
348.68 32.3443 li
351.2 31.8643 li
353.6 31.2643 li
355.76 30.6643 li
357.8 30.0643 li
359.72 29.4643 li
360.56 29.1043 li
361.4 28.7443 li
362.12 28.5043 li
362.96 28.1443 li
362.84 28.1443 li
363.56 27.7843 li
364.28 27.4243 li
364.16 27.4243 li
364.76 27.1843 li
365.36 26.8243 li
365.84 26.4643 li
366.32 26.1043 li
366.2 26.1043 li
366.68 25.7443 li
367.04 25.3843 li
366.92 25.5043 li
367.28 25.1443 li
367.52 24.7843 li
367.4 24.7843 li
367.64 24.4243 li
367.76 24.0643 li
367.76 24.1843 li
367.88 23.8243 li
367.76 23.8243 li
367.88 23.4643 li
367.88 23.5843 li
367.76 23.1043 li
367.88 23.2243 li
367.76 22.8643 li
367.64 22.5043 li
367.4 22.1443 li
367.52 22.2643 li
367.28 21.9043 li
366.92 21.5443 li
367.04 21.5443 li
366.68 21.1843 li
366.2 20.8243 li
366.32 20.8243 li
365.84 20.4643 li
365.84 20.5843 li
365.36 20.2243 li
364.76 19.8643 li
364.16 19.5043 li
364.28 19.5043 li
363.56 19.1443 li
362.84 18.7843 li
362.96 18.7843 li
362.12 18.5443 li
361.4 18.1843 li
360.56 17.8243 li
359.72 17.5843 li
357.8 16.8643 li
355.76 16.2643 li
353.6 15.6643 li
353.6 15.7843 li
351.2 15.1843 li
348.68 14.5843 li
346.04 14.1043 li
343.16 13.5043 li
340.16 13.0243 li
337.16 12.6643 li
333.92 12.1843 li
330.56 11.8243 li
327.08 11.3443 li
323.48 11.1043 li
319.88 10.7443 li
316.04 10.3843 li
312.2 10.1443 li
308.24 9.90427 li
304.16 9.78427 li
300.08 9.54428 li
295.88 9.42426 li
291.56 9.30426 li
287.24 9.30426 li
282.8 9.30426 li
278.36 9.30426 li
278.48 9.30426 li
274.04 9.30426 li
269.84 9.42426 li
265.64 9.54428 li
261.44 9.78427 li
257.48 9.90427 li
253.52 10.1443 li
249.56 10.3843 li
245.84 10.7443 li
242.12 11.1043 li
238.64 11.3443 li
235.16 11.8243 li
231.8 12.1843 li
228.56 12.6643 li
225.44 13.0243 li
222.56 13.5043 li
219.68 14.1043 li
217.04 14.5843 li
214.52 15.1843 li
212.12 15.7843 li
212.12 15.6643 li
209.84 16.2643 li
209.96 16.2643 li
207.8 16.8643 li
207.92 16.8643 li
206 17.5843 li
205.16 17.8243 li
204.32 18.1843 li
203.48 18.5443 li
202.76 18.7843 li
202.04 19.1443 li
201.44 19.5043 li
200.84 19.8643 li
200.36 20.2243 li
199.88 20.5843 li
199.4 20.8243 li
199.04 21.1843 li
198.68 21.5443 li
198.44 21.9043 li
198.2 22.2643 li
198.2 22.1443 li
198.08 22.6243 li
198.08 22.5043 li
197.96 22.8643 li
197.84 23.2243 li
197.84 23.1043 li
197.84 23.5843 li
197.84 23.4643 li
197.84 23.8243 li
cp
.560052 .304723 0 0 cmyk
f
.750179 .679652 .670192 .901488 cmyk
%ADOBeginSubsetFont: HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HNSWTD+CIDFont+F1-GBK-EUC-H 10 GetGlyphDirectory
3626 <001C60D8A8C9B5EE310D81F25D1B39B1ED2D5D695D0CB2814ED563D2AE
33BAEFDCB1792B8601611F248492F5D448AC2EACC66D4895180CA4D5FEDC151B
C36D728ADAB8ED09F0FB73EF44D3C317613976AD7C8CDE1D9B8131BC18EF2DC5
A2BFF8C736572DEB5514DAEAAFDBC77D9C93D2CD1112C89E25086E15E2E48ECD
C9B819787E2769D94377BE690C75D1E35C2C6AA09677B982A62BCED7BD15F4C6
C7BE338D0617125C26C78F64892396FAB0629D6AB4D0D268C321A189EA4776F5
07766801A8E1CF6273C6371CDAD2CCC5D909ABD2B485846513C0713C1E1B4883
A6E379829862EE296C8B41020EC0BC46D4C43C0834A907E138AE87AFFEC0905C
6D930CF98D23D7BF9E1F9F8D68F8BBD49CDD6A257C287129278AF09A> |
1214 <001C60D8A8C9B5EE310DCE8C66EE5F3953CB81797B684D40EE455412CE
487D791C72C4FF96EAC67282DD6C9BBC53754CDB2409E991B825AD72BFA08678
506C6B91FC3007A5DCF0EBC48B9088EE5BC5F0C1D48902EFF59A6BDDCBE5FA25
27216883A3D5FD0B048F09DEEF> |
2591 <001C60D8A8C9B5EE3127FF767AC7A8446C8CF7F14221E81A8554D9BD82
80A0C86365BE4CEFC1AD965DA82B9E0857F443563A0ADCBC5F1396FA8DDF2BB8
4B5EF91A445A7828F4841D4F7226FDC462F00A1CDD509D200C77D24A05133175
FF248BD64002BA131F187261C43EEB5D93397824E1CDEF8C8EA89E491C94DA88
D1EF57D184978B397EDD6F808F6795D74F8B> |
5719 <001C60D8A8C9B5EE310258AB045C319BE5DEF060E790A660ECB8860E44
DAD18F4A606862373C5A161A6B5DA20247DEE4788B6CE434E69E6E11BBF62FCE
E1130AF2BDBAD5E9D72B2AC21ED4E32CDE29D72A1AEF131E81668DE685E51FAF
5C5B1EB2887948796324BC8C00DD155AC096B63C54C29AEC4A447240C638C1BC
0A9853AAE6A7AAF69AB18CC6E242BA2A90B56A31109625238BEC203D519B3818
3CC84ACE9E64F843A2A144309C498ABFA4078F4402B0CA4853FB8F3536DDC6D5
E198E19146D32E8AC6ABDB26F8DA228A50AF7EE1999A94A1C283623459D74550
A228A64F501D242DA133DC6A09A3CE4949D02D207868105AAFAA76751137160B
489B1E67660A0982ED908405B130A3DB8DD4B7705EA5BD> |
17240 <001C60D8A8C9B5EE31442878C9D1953477A0481D726297669A2FBCD4E
90B751D86FC76167B672C664FF20F5786D21C804915A4095FA7F0EDFEC0AF972
903F4A1ABC7F30A803279C26AB83F78592A3A0C8DC434494060048C4D36708BE
83AA4C66A6E182F38A5687112B028D8F484F565CD235A9D9F6A69EB428C68221
3D5F2C95211B5EF8747CDA18B1E04E82665D89D9AFBF53FE7386B9E572BDFDC3
9ADBE77256D4874D6A7E45F918E813A0653C8E29CCCE29A1801A4BD9E2B5A0E7
4671AA678A8B289AA1353ED88CD54B7269175959E336167B98368B0BEBF41B9E
7F83C598BE5BCDBE1DD09DDBF3B026453AD3A11E79E9B3CBB26B48C3D5FA8D0B
9789486C7C90699C5322790030A870F95C3EC5DE04ABD631543CFD12D5B4F418
90956C6CFD2DD7702ABB4C7A7416569B0243245B7DC6889FB1E> |
11444 <001C60D8A8C9B5EE31023EA36A9FB9EE2C219ABE16AF6E98A7F367D70
9BAB068D02B24D63340F410693C034CF5BBBECA200710170958DB600C4C999E1
05001B2BFA4B7A0F55B3CFDCB20B02C5CDEDD0BD3D4822ACB3C3A6B0A316685D
8CF51742A5A3B0B5BB01743954FFEA07DB62AA948E8DCB0F399F3F0050E67826
2C930A2EEFFA173A3D4063CF42CBD1C9336168A104098AE2979E5954AA83057D
8E7C62401CC0D869A5A63418A5F009EF25398270F31F2C3873A5BC2C86AE252C
75C00D85F58E879895BE629E8544187805AE2CA1D3CD18A971146FBE5CDB0E2B
501F80384737F37603FAC267E78D12AD3DC7638CE9AFD4B6136A9E3C02C60362
BCBDA6F8CAD317A3180BDE6BEB563209B4F7E6CBFB4F8> |
5334 <001C60D8A8C9B5EE310268CE6DCE9C38579ECC47A3A38310EFF29A4C57
AD423F5177C16D22E63896AFA614414B40A940B046E2D34D08F74D2B0A245830
35CFCA0375AD249C4BB53B3456C0FF12D4D0BAB2FBCC22B9AFB94847922E7DF1
488C43C30DAE76886ABF2B90A3ADE6922EA6A613CB98CA82A252E6B391733F0B
67100C06B654C4EA3CB4B767120F904E489201C6F14556622AD7046FD3AC0B3F
2CF1A139C2C210965687D704EBD70D9F335C04BA9512C716CD2A40BD8F21BD73
244C8F64FB66C2BEB488866E705BD855C5A249B8AEC2E11E9CF340EB3E38A75A
0EC7CB94B19DCF4B2FEA44D1C1BA2CBFF051AA9C7F35D3E6B1A80CFAF93BBD7B
1DE59D5184152641CF739900FBC712664B21BE373728F44D152E01A91903342C
D441463BB1D41FF582FC3C89276FA7C25E442E1E6DA6552287D95A0FA6ED9A43
BBC4865D> |
18431 <001C60D8A8C9B5EE31025C74B0D5FD83FACDCC1ADEC937952F0F4AFD7
55A23BF6644029B56990B96A60051DE5EBF4CC30DA701E2CDC2BEB0A89902740
BBFB90CB27E4E05415958C5135796618ACC5D45F0AF7B96268090C489AE4BD3A
146FF63E48311270F284E5BD04B3E4711B681BCCA67218C87F46E817767C1E4C
6B2BBDB8F2629896E6DC6A51223FCBA055EA4AD0D1AB8DDE999D91F4CC567BEE
1C631BF1E0E7D15EE4C6DE7C05650594ED77074E913D01B0BD318771141AAF63
A71BCF52E67EC442D633E525C0705D200566BEB18BE99CF09CE1D425F51F7F4D
BB07727AC389D120AFE105974DE84142812344880DAFA3C5C673776440E522AE
993A7EEA7B8DCE2DDB52A83F3D5BC2F38854D39> |
13571 <001C60D8A8C9B5EE31021BDB61D6B8606F0DE405C36E945A5FA8D796B
524802D8A464C6706247BB218E0F1493C00075429D9DA1762D7C766CB8D2784C
B3EA1C0AB76E95E789440FD39CB314A1A8DFBDEA9482B1563231EADFEA13AD24
F1F7B1DA44E6B6EB936D6418CA9AF4A27315FEF83EB752589E406403290872A3
EFF93AA7610526778F3660720C31AEE705B223A82BAE28746543B3D0F2EC882A
F7B24FE2F169DD137B414CC90CE6379D41F0599DFE1FBF2B865521360A008EC7
B23C2B585B5926BCDA96BFA51BFF2A77A3C895AC7773D0FC8E37683AD8C9D195
C90CA212BEBC7FC473B83BD8C8BF6BEC36015402F6C40B734397D5C180F705E3
30AFAA106A5BFAA556A0F57A2EDEDED41D02D8B97781BFE508104ED2E2288022
4643CAB309FA58233E4FC818D03027B> |
7628 <001C60D8A8C9B5EE31025C75FF1B56FF214E2004CBED43F811B3779DB6
AC7B60BEB860127315990BED33B797B3094ED0AF3CD5D4A09F99768690DA482C
8430BF6957132D2960B45928C5521758718C863CADEA76870E0D905E7717F9D7
3162BC398A27F60598F2EA337DBA8A052362D63930A313D608BB74587272DF10
304B5A56884F37D9B01C215B4F49E381E0CEDD4C25F2C066D805F4E78FB8D5C3
DF234D03B1D76056527D515978D531E52EFE701161D2F70C8B631ECE3D4B51D3
6D66CE6C25DC1745C9C478E45F725898809AE1DE8C7986D2D36FD8DC504C3A94
20018F88EDF61E77F0> |
!
end
end end
%ADOEndSubsetFont
/HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.96001 0 0 ]msf
228.322 26.9538 mo
(\016*\004\276\012\037\006\021\026WCX,\264)sh
297.943 26.9538 mo
(\024\326G\3775\003\035\314)
[9.86047 9.76077 9.86047 0 ]xsh
283.04 38.1043 mo
283.04 56.5843 li
282.68 56.5843 li
282.68 38.1043 li
283.04 38.1043 li
cp
285.32 55.7443 mo
282.8 60.6643 li
280.4 55.7443 li
285.32 55.7443 li
cp
f
299.72 74.3443 mo
378.56 74.3443 li
378.56 74.7043 li
299.72 74.7043 li
299.72 74.3443 li
cp
377.72 72.0643 mo
382.64 74.5843 li
377.72 76.9843 li
377.72 72.0643 li
cp
f
299.72 113.224 mo
378.56 113.224 li
378.56 113.704 li
299.72 113.704 li
299.72 113.224 li
cp
377.72 110.944 mo
382.64 113.464 li
377.72 115.984 li
377.72 110.944 li
cp
f
299.72 202.264 mo
378.56 202.264 li
378.56 202.624 li
299.72 202.624 li
299.72 202.264 li
cp
377.72 199.984 mo
382.64 202.504 li
377.72 204.904 li
377.72 199.984 li
cp
f
%ADOBeginSubsetFont: HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HNSWTD+CIDFont+F1-GBK-EUC-H 1 GetGlyphDirectory
4750 <001C60D8A8C9B5EE31028E26D482D95CC881FE279B217B657AE6207E51
B381F316B247C54ACEC2DE5394CFEF10A67A6DD049A90B7D3A6FF66CD2390363
D8F0AB8F4741C49ADB508AC10187C283E93FD6158AA515D64E60FD8096EEED99
82991057957EC61D1F2507DFF2D838166124B13616A5054706D893156B1D6C7D
BE707DCA9B42CBFFBE55CBB3DDE5767CE5E0038D7ED0897B359B32CECB3FCCDF
AC61A878A9D08994DE29D87449725EAA804F0A534F5FDB91489B593604BAC8B2
98A025331EE71B3179B930A1A1281140781819AB604EB7B4422316FFD0F4ABD3
CB59422713A17BD84C7062EEA757E0D568C7CCE16FBDA3B3B0238C4B236F8098
A1B4C94BC6642BAA2F4E111DC17D130C84548D87191F55A2DF2BAAD88AFCB89C
58075DDC1D678F2393CBDAB234FE220C52DA28D23E7081DBA3E3E2F5D3AA8879
C68414D6208639B52013EB31546A166FFE7078358E4CF72CD56A66D0531823CB
FC9F6134F842DC2036BD1820E3A3EAA6B57217B7ED4DA0E5B447B3> |
!
end
end end
%ADOEndSubsetFont
/HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H findfont [8.64 0 0 -8.64 0 0 ]msf
315.665 71.9405 mo
(\022\216\026W)
[8.63998 0 ]xsh
%ADOBeginSubsetFont: QJJAAA+CIDFont+F3 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HNSWTF+CIDFont+F3 gcheck setglobal} if
2 5740 1005 <000100ae0000039f0517002e010cb0852b584024241e01241d01241c0123
1b01241a01241901261801261701291201291101122010014d30b8ffc040
0d0f024d60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29
b8fff0b30d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e
18200b014d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8
ffc0b310014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b01
4da01101111312b8013fb323522910b80107b10654003fed323ffdcd012f
5d2b2b2b2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d
5d5d5d5d5d5d5d1bb313402312b8013fb56c2352290610b80107b26c0654
00183f2b323f2b1acd30315925140e022321222e0235343e023321110706
06262635343e0237253e0333321e02151133321e02039f060a0d07fd5c07
0c0b0606090d08010efa13170e0503060b09012a040c12181218201206ea
080e090544131a100707101a13121a110903d8950a040d1e171118100c06
bf0304040104070b06fb8f09111a>HNSWTF+CIDFont+F3 AddT42Char 
2 6144 1006 <000100720000039c0521003e00cab0852b58400d2936012b1e01291d0126
1e0140b8ffc040170f024d604001161810014d16100c0d014c16200b014d
16b8022db633253325330039b8ffe8b310014d39ba027f000bffc0b30c01
4d0bb8ffe0400b0f014d0b1138392020391bb8012eb63316062e531039b8
0128b10654003fed323f123939ed11392f123939012f2b2be12bcd39392f
2f10e12b2b2b31305d2b005d015d5d5d1bb71138392020392e1bb8012e40
096c3316062e53100639b80128b26c065400183f2b323f1239392b11392f
12393930315925140e022321222e0235343e0237133e0335342e0223220e
0223222e0235343e0633321e0215140e02070721321e02039c05090f09fd
350e150f07030a0f0cfb576939121c3550343d6149310c070b0704020508
183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c130907101e1614
1e17170d010a5c9278622b2b4d3a2222282208121e150f16100e15242318
355c7a453e7b8faf72d609121b00>HNSWTF+CIDFont+F3 AddT42Char 
2 1834 373 <00010099fffa05d003ca0050011eb0852b58401b12100b014d13180b014d
26100b0c014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b
014d13b8fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8
401e1e160d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f1001
4c0ab801f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27
b8fff0b310014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200
100106b24b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f
1239393fed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b
2b2b2b3931305d002b2b2b2b1bb14b10b80106b46c4b4a4124b80106400e
6c414a3e462d38492d4c194c054c00183f3f3f3f1239393f2b3f2b303159
25140e0223222e023511342e022322060711140e0223222e023511342e02
2322060711140e0223222e023511343e0233321e021515363633321e0217
3e0333321e021505d00812201819201308142c442e397345081320181721
1307162c432e397444081220191820130706121c17161d10074c8f493859
4430102d514b47245776491f19080b080404080b080223395e44245855fd
8b080b080404080b080223395e44245855fd8b080b080404080b08038408
0b090303090b0877554f1a2f412831442a133d66894c>HNSWTF+CIDFont+F3 AddT42Char 
HNSWTF+CIDFont+F3 /CharStrings get begin
/one 1005 def
/two 1006 def
/m 373 def
end
HNSWTF+CIDFont+F3 /Encoding get
dup 49 /one put
dup 50 /two put
dup 109 /m put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HNSWTF+CIDFont+F3*1 
[49{/.notdef}rp /one /two 58{/.notdef}rp /m 23{/.notdef}rp /ellipsis 122{/.notdef}rp]
HNSWTF+CIDFont+F3 nf
HNSWTF+CIDFont+F3*1 [8.63994 0 0 -8.63994 0 0 ]msf
332.958 71.9433 mo
(1)sh
/HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H findfont [8.64 0 0 -8.64 0 0 ]msf
337.4 71.9405 mo
(\012\037\006\021\024\326)sh
%ADOBeginSubsetFont: HIBBAA+CIDFont+F2 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HNSWTE+CIDFont+F2 gcheck setglobal} if
2 2884 1846 <00010046000004a505550021002140101212010e0e211809910f030221a6
0112003fed323fed3211392f11392f31302121373e033713232206060723
13210323342e022323030e0215141616170254fe5b0b28261d1d14d67f3e
4a4a35604b04144e600a1c293494d90907051428313106142a5a5b03d324
62730151fea061613313fc26272e33141f231004>HNSWTE+CIDFont+F2 AddT42Char 
2 6118 3052 <00010019fe7604e103fd003d0032b237373bb803f7b31e001233b8040eb2
26c528b80407b50d0c0c07fd12b80406003fed3211333fed3f123939ed32
7d2f31302526022e0323220e0207273e0333321e02171e05173e03273426
273721170600070e05072226273733151433323602262132292220211312
1e20251b4d2b48474a2c24342a2111091416161614094b78532c012e360d
011d2364fef5a849756355504f2b174119325b37499606be0115c37a4419
091c3329323f5431150f20332416526c828e954862c9b3932c2c2603403a
f7fe35d8577e5b3a230f020a08db06447100>HNSWTE+CIDFont+F2 AddT42Char 
2 7026 3117 <000100b80000042b04cd001a0029b900000418b60d151114140717b80431
b708eb072005eb0620003fed3fed3f1239113333012fed313001141e0217
1521353e03351134262322060727013306061502f31630747efcc37a7135
191d1b1e80643501ff42020401043f361f11025d5d03101f363f02972420
413f65010915a252>HNSWTE+CIDFont+F2 AddT42Char 
2 7154 3118 <00010090000003fd04d600260038b900200412400e0610102817161613dd
0c2408181bb80431b2050500b803f7b10820003fed322f3f33123939ed32
2f012f12392f39ed313025323e0237330321353636373e02353426232206
072335363633321e021514060607060702e333362016166515fca832aa71
88723770695b7f218b82db5573975a243a84aab552a50a152036fee6376b
cf6e8284773c6372605ec5352d32506c39487b919aa47800>HNSWTE+CIDFont+F2 AddT42Char 
2 8238 3288 <00010039ffeb07dd041c004c0040b53a393936ff3db803eeb247ff2bb804
36b5241e0c06ff22b80436b516151512ff19b80436b30c1e001e003f3f3f
ed3211333fed1239393fed3fed321133313021231336353423220e020703
231336353423220607273636333216151407173636333215151407333636
333216151407030606151433323637170606232226353437373635342322
0e0207040ad78921643e7370400e69d99c1a4129543b4c699c565059070d
5fc269dc020a5fbe69736e1c4517084229533c4b699c5552682631235f3d
6c714211024a8b45714d817c49fe08029a703747403e4869616857241c05
8282d6130a0a827b766d397bfee45e2f1747403f49696071555c85b9824d
714880804b00>HNSWTE+CIDFont+F2 AddT42Char 
2 3588 2010 <0002000ffe52047f0597001800320021401100324719192b209510010b1b
092b950616003fed393f3fed12392fed3931300116151406062322262703
23013e0233321615140e0207273e0235342623220607030615141e023332
3636353426270302ee69cb845581456ba301282888cc8a9aa81d56996fa9
6cae6353527faa36870519314e3c51854c7d7402e654e576ce791b21fe26
052ab2ea7f897e337773622324086caf685358f5f9fd8d17101b26251b64
b87671800900>HNSWTE+CIDFont+F2 AddT42Char 
HNSWTE+CIDFont+F2 /CharStrings get begin
/g1846 1846 def
/g3052 3052 def
/g3117 3117 def
/g3118 3118 def
/g3288 3288 def
/g2010 2010 def
end
HNSWTE+CIDFont+F2 /Encoding get
dup 38 /g1846 put
dup 39 /g3052 put
dup 40 /g3117 put
dup 41 /g3118 put
dup 42 /g3288 put
dup 43 /g2010 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HNSWTE+CIDFont+F2*1 
[32{/.notdef}rp /g2870 /g3036 /g3041 /g1866 /g2019 /g3040 /g1846 
/g3052 /g3117 /g3118 /g3288 /g2010 /comma 82{/.notdef}rp /g1857 
/.notdef /g2869 126{/.notdef}rp]
HNSWTE+CIDFont+F2 nf
HNSWTE+CIDFont+F2*1 [8.63994 0 0 -8.63994 0 0 ]msf
363.317 71.9433 mo
(&)sh
HNSWTE+CIDFont+F2*1 [6.36002 0 0 -6.36002 0 0 ]msf
367.283 73.7446 mo
(')sh
HNSWTE+CIDFont+F2*1 [5.15998 0 0 -5.15998 0 0 ]msf
370.997 75.0623 mo
(\()sh
/HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H findfont [8.64 0 0 -8.64 0 0 ]msf
315.935 111.799 mo
(\022\216\026W)
[8.63998 0 ]xsh
HNSWTF+CIDFont+F3*1 [8.63994 0 0 -8.63994 0 0 ]msf
333.195 111.781 mo
(2)sh
/HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H findfont [8.64 0 0 -8.64 0 0 ]msf
337.636 111.799 mo
(\012\037\006\021\024\326)sh
HNSWTE+CIDFont+F2*1 [8.63994 0 0 -8.63994 0 0 ]msf
363.556 111.781 mo
(&)sh
HNSWTE+CIDFont+F2*1 [6.36002 0 0 -6.36002 0 0 ]msf
367.521 113.586 mo
(')sh
HNSWTE+CIDFont+F2*1 [5.15998 0 0 -5.15998 0 0 ]msf
371.239 114.904 mo
(\))sh
/HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H findfont [8.64 0 0 -8.64 0 0 ]msf
315.935 198.672 mo
(\022\216\026W)
[8.63998 0 ]xsh
HNSWTF+CIDFont+F3*1 [8.63994 0 0 -8.63994 0 0 ]msf
333.195 198.66 mo
(m)sh
/HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H findfont [8.64 0 0 -8.64 0 0 ]msf
340.167 198.672 mo
(\012\037\006\021\024\326)sh
HNSWTE+CIDFont+F2*1 [8.63994 0 0 -8.63994 0 0 ]msf
366.075 198.66 mo
(&)sh
HNSWTE+CIDFont+F2*1 [6.36002 0 0 -6.36002 0 0 ]msf
370.043 200.464 mo
(')sh
HNSWTE+CIDFont+F2*1 [5.15998 0 0 -5.15998 0 0 ]msf
373.759 201.782 mo
(*)sh
HNSWTF+CIDFont+F3*1 [0 14.88 14.88 0 0 0 ]msf
341.358 143.703 mo
(\205\205)
[27.3792 0 ]ysh
HNSWTE+CIDFont+F2*1 [11.52 0 0 -11.52 0 0 ]msf
279.08 250.868 mo
(+)sh
283.04 236.104 mo
283.04 218.824 li
282.68 218.824 li
282.68 236.104 li
283.04 236.104 li
cp
285.32 219.664 mo
282.8 214.744 li
280.4 219.664 li
285.32 219.664 li
cp
f
gsave
305.12 256.624 mo
378.44 256.624 li
378.44 276.664 li
305.12 276.664 li
cp
clp
378.68 256.384 mo
378.68 256.984 li
304.88 256.984 li
304.88 256.384 li
cp
.270176 .138308 0 0 cmyk
ef
378.68 256.984 mo
378.68 257.344 li
304.88 257.344 li
304.88 256.984 li
cp
.272496 .136873 0 0 cmyk
ef
378.68 257.344 mo
378.68 257.584 li
304.88 257.584 li
304.88 257.344 li
cp
.272129 .141939 0 0 cmyk
ef
378.68 257.584 mo
378.68 258.544 li
304.88 258.544 li
304.88 257.584 li
cp
.274479 .140566 0 0 cmyk
ef
378.68 258.544 mo
378.68 259.504 li
304.88 259.504 li
304.88 258.544 li
cp
.277897 .143862 0 0 cmyk
ef
378.68 259.504 mo
378.68 260.104 li
304.88 260.104 li
304.88 259.504 li
cp
.281376 .148348 0 0 cmyk
ef
378.68 260.104 mo
378.68 260.704 li
304.88 260.704 li
304.88 260.104 li
cp
.285252 .15314 0 0 cmyk
ef
378.68 260.704 mo
378.68 261.064 li
304.88 261.064 li
304.88 260.704 li
cp
.288182 .151858 0 0 cmyk
ef
378.68 261.064 mo
378.68 261.424 li
304.88 261.424 li
304.88 261.064 li
cp
.289982 .157229 0 0 cmyk
ef
378.68 261.424 mo
378.68 262.024 li
304.88 262.024 li
304.88 261.424 li
cp
.292912 .156039 0 0 cmyk
ef
378.68 262.024 mo
378.68 262.264 li
304.88 262.264 li
304.88 262.024 li
cp
.295933 .154818 0 0 cmyk
ef
378.68 262.264 mo
378.68 262.624 li
304.88 262.624 li
304.88 262.264 li
cp
.297093 .160983 0 0 cmyk
ef
378.68 262.624 mo
378.68 263.584 li
304.88 263.584 li
304.88 262.624 li
cp
.300114 .159915 0 0 cmyk
ef
378.68 263.584 mo
378.68 264.544 li
304.88 264.544 li
304.88 263.584 li
cp
.304967 .164034 0 0 cmyk
ef
378.68 264.544 mo
378.68 265.144 li
304.88 265.144 li
304.88 264.544 li
cp
.308629 .169039 0 0 cmyk
ef
378.68 265.144 mo
378.68 265.744 li
304.88 265.744 li
304.88 265.144 li
cp
.312383 .174533 0 0 cmyk
ef
378.68 265.744 mo
378.68 266.104 li
304.88 266.104 li
304.88 265.744 li
cp
.315312 .173312 0 0 cmyk
ef
378.68 266.104 mo
378.68 266.344 li
304.88 266.344 li
304.88 266.104 li
cp
.317479 .179141 0 0 cmyk
ef
378.68 266.344 mo
378.68 266.944 li
304.88 266.944 li
304.88 266.344 li
cp
.320531 .178042 0 0 cmyk
ef
378.68 266.944 mo
378.68 267.304 li
304.88 267.304 li
304.88 266.944 li
cp
.323461 .176883 0 0 cmyk
ef
378.68 267.304 mo
378.68 267.664 li
304.88 267.664 li
304.88 267.304 li
cp
.324407 .182895 0 0 cmyk
ef
378.68 267.664 mo
378.68 268.264 li
304.88 268.264 li
304.88 267.664 li
cp
.327031 .181796 0 0 cmyk
ef
378.68 268.264 mo
378.68 268.504 li
304.88 268.504 li
304.88 268.264 li
cp
.329656 .180667 0 0 cmyk
ef
378.68 268.504 mo
378.68 268.864 li
304.88 268.864 li
304.88 268.504 li
cp
.330114 .185885 0 0 cmyk
ef
378.68 268.864 mo
378.68 269.464 li
304.88 269.464 li
304.88 268.864 li
cp
.332616 .184726 0 0 cmyk
ef
378.68 269.464 mo
378.68 269.824 li
304.88 269.824 li
304.88 269.464 li
cp
.334966 .183719 0 0 cmyk
ef
378.68 269.824 mo
378.68 270.064 li
304.88 270.064 li
304.88 269.824 li
cp
.335271 .187961 0 0 cmyk
ef
378.68 270.064 mo
378.68 270.784 li
304.88 270.784 li
304.88 270.064 li
cp
.337652 .186862 0 0 cmyk
ef
378.68 270.784 mo
378.68 271.024 li
304.88 271.024 li
304.88 270.784 li
cp
.340093 .185763 0 0 cmyk
ef
378.68 271.024 mo
378.68 271.384 li
304.88 271.384 li
304.88 271.024 li
cp
.340276 .190097 0 0 cmyk
ef
378.68 271.384 mo
378.68 271.864 li
304.88 271.864 li
304.88 271.384 li
cp
.342687 .188937 0 0 cmyk
ef
378.68 271.864 mo
378.68 272.344 li
304.88 272.344 li
304.88 271.864 li
cp
.345068 .187808 0 0 cmyk
ef
378.68 272.344 mo
378.68 272.704 li
304.88 272.704 li
304.88 272.344 li
cp
.348608 .190463 0 0 cmyk
ef
378.68 272.704 mo
378.68 273.184 li
304.88 273.184 li
304.88 272.704 li
cp
.351202 .189364 0 0 cmyk
ef
378.68 273.184 mo
378.68 273.544 li
304.88 273.544 li
304.88 273.184 li
cp
.353857 .188266 0 0 cmyk
ef
378.68 273.544 mo
378.68 273.904 li
304.88 273.904 li
304.88 273.544 li
cp
.354925 .193606 0 0 cmyk
ef
378.68 273.904 mo
378.68 274.504 li
304.88 274.504 li
304.88 273.904 li
cp
.357549 .192538 0 0 cmyk
ef
378.68 274.504 mo
378.68 274.864 li
304.88 274.864 li
304.88 274.504 li
cp
.360021 .19147 0 0 cmyk
ef
378.68 274.864 mo
378.68 275.104 li
304.88 275.104 li
304.88 274.864 li
cp
.361181 .197055 0 0 cmyk
ef
378.68 275.104 mo
378.68 275.704 li
304.88 275.704 li
304.88 275.104 li
cp
.363531 .195987 0 0 cmyk
ef
378.68 275.704 mo
378.68 276.064 li
304.88 276.064 li
304.88 275.704 li
cp
.365972 .194949 0 0 cmyk
ef
378.68 276.064 mo
378.68 276.424 li
304.88 276.424 li
304.88 276.064 li
cp
.367224 .200443 0 0 cmyk
ef
378.68 276.424 mo
378.68 276.904 li
304.88 276.904 li
304.88 276.424 li
cp
.369848 .199405 0 0 cmyk
ef
grestore
304.88 256.504 mo
378.68 256.504 li
378.68 276.904 li
304.88 276.904 li
304.88 256.504 li
cp
305.24 276.664 mo
305.12 276.424 li
378.44 276.424 li
378.32 276.664 li
378.32 256.624 li
378.44 256.864 li
305.12 256.864 li
305.24 256.624 li
305.24 276.664 li
cp
.560052 .304723 0 0 cmyk
f
.750179 .679652 .670192 .901488 cmyk
%ADOBeginSubsetFont: HIBBAA+CIDFont+F2 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HNSWTE+CIDFont+F2 gcheck setglobal} if
2 3386 2009 <00020069fff004a903cc00240033002e4018230f212213070202162a951e
10319716160b0a0a079e0e16003fed322f333fed3fed11392f1239cd323f
313001060706151416333236371706062322353437230606232226263534
123633321617371333013635342623220602151416333236049f7ca8191e
231c47293a547c4285060a67b86949643088f297707f070983adfe431143
475c9e5f3c3c56b60389a8f5bf4f42392f31365a43c22b349a87548b52b3
0141b78c87010102fe296850726ea4fee8936562ca00>HNSWTE+CIDFont+F2 AddT42Char 
2 2400 485 <000300f90000059700e800030007000b0050b0852b58401b0b0007b0800a
010609af0a0e0501064201af02020c05af06060d0c1112392fe112392fe1
2b0110f2e100182f33331aed323231301bb70b0007b0800a010600182f33
331aed323230315925152335211523352115233501c3ca02b4ca02b4cae8
e8e8e8e8e8e8>HNSWTE+CIDFont+F2 AddT42Char 
HNSWTE+CIDFont+F2 /CharStrings get begin
/g2009 2009 def
/ellipsis 485 def
end
HNSWTE+CIDFont+F2 /Encoding get
dup 45 /g2009 put
dup 133 /ellipsis put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HNSWTE+CIDFont+F2*1 
[32{/.notdef}rp /g2870 /g3036 /g3041 /g1866 /g2019 /g3040 /g1846 
/g3052 /g3117 /g3118 /g3288 /g2010 /comma /g2009 81{/.notdef}rp 
/g1857 /.notdef /g2869 3{/.notdef}rp /ellipsis 122{/.notdef}rp]
HNSWTE+CIDFont+F2 nf
HNSWTE+CIDFont+F2*1 [11.52 0 0 -11.52 0 0 ]msf
321.8 270.425 mo
(-)sh
HNSWTE+CIDFont+F2*1 [8.40008 0 0 -8.40008 0 0 ]msf
328.525 272.829 mo
(\201)sh
HNSWTE+CIDFont+F2*1 [11.52 0 0 -11.52 0 0 ]msf
335.718 270.425 mo
(\205)sh
346.283 270.425 mo
(-)sh
HNSWTE+CIDFont+F2*1 [8.40008 0 0 -8.40008 0 0 ]msf
353.245 272.829 mo
(%)sh
416.48 139.864 mo
474.2 139.864 li
474.2 140.344 li
416.48 140.344 li
416.48 139.864 li
cp
473.36 137.584 mo
478.28 140.104 li
473.36 142.624 li
473.36 137.584 li
cp
f
HNSWTE+CIDFont+F2*1 [13.2 0 0 -13.2 0 0 ]msf
439.757 134.823 mo
(&)sh
384.08 26.8243 mo
384.08 18.3043 413.24 11.3443 449.12 11.3443 cv
485.12 11.3443 514.28 18.3043 514.28 26.8243 cv
514.28 35.3443 485.12 42.1843 449.12 42.1843 cv
413.24 42.1843 384.08 35.3443 384.08 26.8243 cv
cp
.333379 .159304 0 0 cmyk
ef
383.72 26.8243 mo
383.72 25.8643 li
384.08 25.0243 li
384.56 24.1843 li
385.16 23.4643 li
385.88 22.6243 li
386.72 21.9043 li
387.8 21.1843 li
389 20.4643 li
390.32 19.7443 li
391.76 19.0243 li
393.32 18.4243 li
395.12 17.8243 li
396.92 17.1043 li
398.84 16.6243 li
400.88 16.0243 li
403.04 15.4243 li
405.32 14.9443 li
407.72 14.4643 li
410.12 13.9843 li
412.76 13.6243 li
415.4 13.1443 li
418.16 12.7843 li
420.92 12.4243 li
423.8 12.1843 li
426.8 11.8243 li
429.8 11.5843 li
432.92 11.4643 li
436.04 11.2243 li
439.28 11.1043 li
442.52 10.9843 li
445.76 10.9843 li
449.12 10.9843 li
452.48 10.9843 li
455.84 10.9843 li
459.08 11.1043 li
462.32 11.2243 li
465.44 11.4643 li
468.56 11.5843 li
471.56 11.8243 li
474.56 12.1843 li
477.44 12.4243 li
480.2 12.7843 li
482.96 13.1443 li
485.6 13.6243 li
488.12 13.9843 li
490.64 14.4643 li
493.04 14.9443 li
495.32 15.4243 li
497.48 16.0243 li
499.52 16.6243 li
501.44 17.1043 li
503.24 17.8243 li
504.919 18.4243 li
506.6 19.0243 li
508.04 19.7443 li
509.36 20.4643 li
510.56 21.1843 li
511.52 21.9043 li
512.48 22.6243 li
513.2 23.4643 li
513.8 24.1843 li
514.28 25.0243 li
514.52 25.8643 li
514.64 26.8243 li
514.52 27.6643 li
514.28 28.5043 li
513.8 29.3443 li
513.2 30.1843 li
512.48 30.9043 li
511.52 31.7443 li
510.56 32.4643 li
509.36 33.1843 li
508.04 33.9043 li
506.6 34.5043 li
504.919 35.2243 li
503.24 35.8243 li
501.44 36.4243 li
499.52 37.0243 li
497.48 37.6243 li
495.32 38.1043 li
493.04 38.5843 li
490.64 39.0643 li
488.12 39.5443 li
485.6 40.0243 li
482.96 40.3843 li
480.2 40.7443 li
477.44 41.1043 li
474.56 41.4643 li
471.56 41.7043 li
468.56 41.9443 li
465.44 42.1843 li
462.32 42.3043 li
459.08 42.4243 li
455.84 42.5443 li
452.48 42.6643 li
449.12 42.6643 li
445.88 42.6643 li
442.52 42.5443 li
439.28 42.4243 li
436.04 42.3043 li
432.92 42.1843 li
429.8 41.9443 li
426.8 41.7043 li
423.8 41.4643 li
420.92 41.1043 li
418.16 40.7443 li
415.4 40.3843 li
412.76 40.0243 li
410.12 39.5443 li
407.72 39.0643 li
405.32 38.5843 li
403.04 38.1043 li
400.88 37.6243 li
398.84 37.0243 li
396.92 36.4243 li
395.12 35.8243 li
393.32 35.2243 li
391.76 34.5043 li
390.32 33.9043 li
389 33.1843 li
387.8 32.4643 li
386.72 31.7443 li
385.88 30.9043 li
385.16 30.1843 li
384.56 29.3443 li
384.08 28.5043 li
383.72 27.6643 li
383.72 26.8243 li
cp
384.56 27.5443 mo
384.56 27.4243 li
384.8 28.2643 li
384.8 28.1443 li
385.16 28.9843 li
385.16 28.8643 li
385.76 29.7043 li
385.76 29.5843 li
386.48 30.4243 li
386.36 30.3043 li
387.32 31.0243 li
388.28 31.7443 li
389.48 32.4643 li
389.36 32.4643 li
390.68 33.1843 li
390.68 33.0643 li
392.12 33.7843 li
393.68 34.3843 li
395.36 35.1043 li
395.36 34.9843 li
397.16 35.7043 li
399.08 36.1843 li
401.12 36.7843 li
403.28 37.2643 li
405.56 37.8643 li
407.84 38.3443 li
410.36 38.8243 li
412.88 39.1843 li
415.52 39.5443 li
418.16 40.0243 li
421.04 40.2643 li
423.92 40.6243 li
426.8 40.8643 li
429.8 41.1043 li
432.92 41.3443 li
436.04 41.4643 li
439.28 41.7043 li
442.52 41.7043 li
445.88 41.8243 li
449.12 41.8243 li
452.48 41.8243 li
455.84 41.7043 li
459.08 41.7043 li
462.32 41.4643 li
462.2 41.4643 li
465.44 41.3443 li
468.44 41.1043 li
471.56 40.8643 li
474.44 40.6243 li
477.32 40.2643 li
480.08 40.0243 li
482.84 39.5443 li
485.48 39.1843 li
488 38.8243 li
490.52 38.3443 li
492.8 37.8643 li
495.08 37.2643 li
497.24 36.7843 li
499.28 36.1843 li
501.2 35.7043 li
503 34.9843 li
503 35.1043 li
504.68 34.3843 li
506.24 33.7843 li
507.68 33.0643 li
507.68 33.1843 li
508.88 32.4643 li
510.08 31.7443 li
511.04 31.0243 li
511.88 30.3043 li
511.88 30.4243 li
512.6 29.5843 li
512.6 29.7043 li
513.2 28.8643 li
513.08 28.9843 li
513.56 28.1443 li
513.56 28.2643 li
513.8 27.4243 li
513.8 27.5443 li
513.8 26.7043 li
513.8 26.8243 li
513.8 26.1043 li
513.56 25.3843 li
513.08 24.6643 li
513.2 24.6643 li
512.6 23.9443 li
511.88 23.2243 li
511.04 22.5043 li
510.08 21.7843 li
508.88 21.1843 li
507.68 20.4643 li
506.24 19.7443 li
506.24 19.8643 li
504.68 19.1443 li
503 18.5443 li
501.2 17.9443 li
499.28 17.3443 li
497.24 16.8643 li
495.08 16.2643 li
492.8 15.7843 li
490.52 15.3043 li
488 14.8243 li
485.48 14.3443 li
482.84 13.9843 li
480.08 13.6243 li
477.32 13.2643 li
474.44 13.0243 li
471.56 12.6643 li
468.44 12.4243 li
465.44 12.1843 li
462.2 12.0643 li
462.32 12.0643 li
459.08 11.9443 li
455.84 11.8243 li
452.48 11.8243 li
449.12 11.7043 li
445.76 11.8243 li
445.88 11.8243 li
442.52 11.8243 li
439.28 11.9443 li
436.04 12.0643 li
432.92 12.1843 li
429.8 12.4243 li
426.8 12.6643 li
423.92 13.0243 li
421.04 13.2643 li
418.16 13.6243 li
415.52 13.9843 li
412.88 14.3443 li
410.36 14.8243 li
407.84 15.3043 li
405.56 15.7843 li
403.28 16.2643 li
401.12 16.8643 li
399.08 17.3443 li
397.16 17.9443 li
395.36 18.5443 li
393.68 19.1443 li
392.12 19.8643 li
392.12 19.7443 li
390.68 20.4643 li
389.36 21.1843 li
389.48 21.1843 li
388.28 21.7843 li
387.32 22.5043 li
386.36 23.2243 li
386.48 23.2243 li
385.76 23.9443 li
385.16 24.6643 li
384.8 25.3843 li
384.56 26.1043 li
384.56 25.9843 li
384.56 26.8243 li
384.56 26.7043 li
384.56 27.5443 li
cp
.560052 .304723 0 0 cmyk
f
.750179 .679652 .670192 .901488 cmyk
%ADOBeginSubsetFont: HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HNSWTD+CIDFont+F1-GBK-EUC-H 6 GetGlyphDirectory
2102 <001C60D8A8C9B5EE310D75AF63B60288AFC61718C33D937C59FD52C538
7DC7497B6D961E924C072228906B490758BCBF3A18F3D1F460C2952208D126FD
7607984F52A10736DF35BE6CCDCF0E6B0A7867C876BACEBFEA20A2FE78DBC64B
288043128B5D9FA3F0126350100122362D646AD98C1E4C95DC85AAB11B3B09D8
508CC69F532BD2AF487FFB2B92CA3E16CCE427D0A912BD976997CEDAABF086D2
937625AF1CB25A9C4AA0804DCCBFCAA101853E4793C3A8CCF272C42D068663FD
F48F464BB179773B0A79515CD4CB2B2A40A193> |
13527 <001C60D8A8C9B5EE31021BD445E3FEA2F1031205DA57008117854CBE0
CE476FA0865EBC90EE63BE79E355F3DA9F69C4F510442EFFF061B2F1BD345FEC
442109E10016857791FBE72C711818283360950996FE3666E3A5924C2BC39742
BC00D45869726043AF9953FBEAE6808DEDF81379C51B9E7181E7614158ED46BD
C02169024354D1242B25C605FA74A0B9BC56610E6931F99E1954E2DE763A4C6C
3FCC3D3A4088CED84861C7813548AB37073ADE07EB7D4762E9706E65FC726632
45831093E44BEFD9376C475222636242293CE34BC414C5014981C801D5466C1F
B46922E553AE72DC46FE230A39824388C523BE6758B0B3591902F737F466CB1B
051EFD8AAC80385B731E5A20BA5FB6ED1CC3E76D874B25CDDE4D5677FC6479F3
9C6CC30370017C18F5EA278D8A492985DC50BCD479A0981204222504A530B21C
D417BD22E5C926366B93311D14094F9ADE06D40DD> |
16884 <001C60D8A8C9B5EE310D5F637947B51E62AA6C015056A4DB81EBB3E22
8B665B411A0CA29526C1D366C5473839C04538D23F3F7C6C96C9B95352320482
FF641D585DEA157D8A86E686C6F18D31DC361CE69761E6F20B80B47298FE8017
E331DA7ACEF9DDB3349E2AEA4E219971A034CCDD202C300E7FE0958DDDBDE8EC
E3D7A972280274AD247DF2A2A8B56E67B8ACBE3AC61975C3E6A750B0AB691386
1F0EAF192ED3195C5478B5DB47C19A8892BF0B0E7F335400AC2CBE84A7023EF9
7B0D3C9716911039001DCAA9021FFFA9B8C4B1ABE42D08EB9C5685BDF3AA9B3A
7C60F579DD504A823DC1B81C19E7E0E7638EE83D54A2238E0A7BAD9A455A3064
3469A19CCE782FF5E7F9F6B307E5575A350CE0E0EB41D2F555D7316208AAE388
D536EC7C70EA49BD95EA5BD> |
1376 <001C60D8A8C9B5EE31034E2A1F4A781CEA607172280ABFF435EB4FCC05
667093623DB034320BC2D17BD30C5D7149C491FBB68A54B4DE3D999FBF26D160
B4708BC88509B68CD9F344164938EFBADF1928B5E0265FED8F7FD9177237E507
EF28C496A09534B66833C61A9BDDE84D4D0162C7BE8D58003461F53A59E1962B
866C2554807ADC33869C2231CE9C81DC70E1D45C36434D84969423019B397DA7
0D3521A5BF630FCCF80CF24F6456930BCAD88356CDE5E768F2D05634692AAADC
91AD9BAC0223BE967F0C289A3566029F27C9> |
8273 <001C60D8A8C9B5EE310D991F82D8FC606D8F35C5B69427E6274A939C88
D01B05A52977427C91BD6A5BEBE2445B8801FBB3FCD81F655E2E5857D5DA5143
DE9CFD2A0E26F3B18C58D69C8B3F74C372A08664AB91409804538EC27395A273
1BDA4BF0FDB7623D4A5DFAC59413573DE1C8E4F7FBA66E7B685D4749EDC6C763
219CC1B695B7B892CBE8D997B68D977A9E3305495D166899FDDBE133B6D8B8C3
CA7349493EF83B63FB2CF6034C28F457801C9B80B4C1A831021C19DB280A05D0
11FD4FC019EC4252ED6CF1FE4B012F36D93897490B17F11146664896938A65A2
D07E114950CB45F30C44FCD1F98B684D97E8BE4CDEBFDC5A1C6EB02FE63DC59A
8317A98320E8EF0648D06323935482296C485DA44754BBE4409280F89A675105
B6164E773F74D78DDB7D41B37F2780052AD651E9F0E7AC6647834E20A322BB80
DD7D6213D361C5AC329E343F0ECEC3DD659FABC8FC19461E5D1E5EA144A9C90C
9CFF73B00B3749099CFE747426547BB3DA005431CAE908DEB8DBB03B269BC49A
382560F84696092A5485685951257773B8638542A25F1C> |
3515 <001C60D8A8C9B5EE310250288C1C6F6A69B2731737A9B23946AEC5233A
801EB2C5909A5919B48208B8D8388D1B961EA304687C305C7AB916EE17125871
C6891DD1E5391693BB9CA5D6D7D748962E76572C4F9C1871C498D4A3D9ED551A
49F74AF4515410DB4B324756E4232CCA02813D944CA0B9809B5F7E53C09B20FA
E7C12C78E095E2550538AC3BB15B200CEE219FBAB31D293B1F9493B8067FCA1C
EBD8BE885AE1174E8801FF69A40FAD7F4CE306AC1C75A05FF1A134E423720DD5
B14E8BDF3A0E13C60AF519485877754B98A249D0F0A4B8112AC28A2D97A06FF0
F96ED4C980C7A49BA4D70DE25DA6862C04C4E84A8AF71747408805559BE683A4
163E2D8E83585A53D2078BFE667C6D0C88B0DC6388775478AC771780685EAE8D
03> |
!
end
end end
%ADOEndSubsetFont
/HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.96001 0 0 ]msf
409.275 30.2997 mo
(\012\037\006\021\01064\327A\364\005` Q\015\273)sh
449.36 42.1843 mo
449.36 136.024 li
449 136.024 li
449 42.1843 li
449.36 42.1843 li
cp
451.64 135.184 mo
449.12 140.104 li
446.72 135.184 li
451.64 135.184 li
cp
f
233.6 226.264 mo
233.84 205.984 li
233.48 205.984 li
233.24 226.264 li
233.6 226.264 li
cp
236.12 206.824 mo
233.72 201.784 li
231.2 206.704 li
236.12 206.824 li
cp
f
478.28 115.984 mo
478.28 118.864 487.76 121.264 499.4 121.264 cv
511.04 121.264 520.4 118.864 520.4 115.984 cv
520.4 164.224 li
520.4 167.104 511.04 169.504 499.4 169.504 cv
487.76 169.504 478.28 167.104 478.28 164.224 cv
cp
.333379 .159304 0 0 cmyk
ef
478.28 115.984 mo
478.28 113.104 487.76 110.704 499.4 110.704 cv
511.04 110.704 520.4 113.104 520.4 115.984 cv
520.4 118.864 511.04 121.264 499.4 121.264 cv
487.76 121.264 478.28 118.864 478.28 115.984 cv
cp
.205356 .0835889 0 0 cmyk
ef
520.88 115.984 mo
520.76 116.344 li
520.64 116.704 li
520.52 116.944 li
520.28 117.304 li
520.04 117.544 li
519.68 117.904 li
519.32 118.144 li
518.96 118.384 li
518 118.864 li
516.919 119.344 li
515.72 119.704 li
514.4 120.064 li
512.84 120.424 li
511.16 120.784 li
509.48 121.024 li
507.56 121.264 li
505.64 121.384 li
503.6 121.504 li
501.56 121.624 li
499.4 121.624 li
497.24 121.624 li
495.08 121.504 li
493.04 121.384 li
491.12 121.264 li
489.2 121.024 li
487.52 120.784 li
485.84 120.424 li
484.4 120.064 li
482.96 119.704 li
481.76 119.344 li
480.68 118.864 li
479.72 118.384 li
479.36 118.144 li
479 117.904 li
478.64 117.544 li
478.4 117.304 li
478.16 116.944 li
478.04 116.704 li
477.919 116.344 li
477.919 115.984 li
477.919 115.624 li
478.04 115.264 li
478.16 114.904 li
478.4 114.664 li
478.64 114.304 li
479 114.064 li
479.36 113.824 li
479.72 113.584 li
480.68 113.104 li
481.76 112.624 li
482.96 112.264 li
484.4 111.904 li
485.84 111.544 li
487.52 111.184 li
489.2 110.944 li
491.12 110.704 li
493.04 110.584 li
495.08 110.344 li
497.24 110.344 li
499.4 110.344 li
501.56 110.344 li
503.6 110.344 li
505.64 110.584 li
507.56 110.704 li
509.48 110.944 li
511.16 111.184 li
512.84 111.544 li
514.4 111.904 li
515.72 112.264 li
516.919 112.624 li
518 113.104 li
518.96 113.584 li
519.32 113.824 li
519.68 114.064 li
520.04 114.304 li
520.28 114.664 li
520.52 114.904 li
520.64 115.264 li
520.76 115.624 li
520.88 115.984 li
cp
519.919 115.744 mo
520.04 115.864 li
519.919 115.504 li
519.919 115.624 li
519.8 115.384 li
519.68 115.144 li
519.44 114.904 li
519.44 115.024 li
519.2 114.664 li
519.2 114.784 li
518.84 114.544 li
518.96 114.544 li
518.6 114.304 li
517.64 113.824 li
517.76 113.824 li
516.68 113.464 li
515.48 112.984 li
514.16 112.624 li
512.72 112.264 li
511.04 112.024 li
509.36 111.784 li
507.56 111.544 li
505.64 111.304 li
503.6 111.184 li
501.44 111.184 li
499.4 111.064 li
497.24 111.184 li
495.08 111.184 li
493.16 111.304 li
491.24 111.544 li
489.32 111.784 li
487.64 112.024 li
486.08 112.264 li
484.52 112.624 li
483.2 112.984 li
482 113.464 li
481.04 113.824 li
480.08 114.304 li
480.2 114.304 li
479.72 114.544 li
479.84 114.544 li
479.48 114.784 li
479.48 114.664 li
479.24 115.024 li
479.24 114.904 li
479 115.144 li
478.88 115.384 li
478.76 115.624 li
478.76 115.504 li
478.76 115.864 li
478.76 115.744 li
478.64 115.984 li
478.76 116.224 li
478.76 116.104 li
478.76 116.344 li
478.88 116.584 li
479 116.824 li
479 116.704 li
479.24 117.064 li
479.24 116.944 li
479.48 117.184 li
479.84 117.424 li
479.72 117.424 li
480.2 117.664 li
480.08 117.664 li
481.04 118.144 li
482 118.504 li
483.2 118.984 li
483.2 118.864 li
484.52 119.344 li
486.08 119.584 li
487.64 119.944 li
489.32 120.184 li
491.24 120.424 li
493.16 120.544 li
495.08 120.664 li
497.24 120.784 li
499.4 120.784 li
501.44 120.784 li
503.6 120.664 li
505.64 120.544 li
507.56 120.424 li
509.36 120.184 li
511.04 119.944 li
512.72 119.584 li
514.16 119.344 li
515.48 118.864 li
515.48 118.984 li
516.68 118.504 li
517.76 118.144 li
517.64 118.144 li
518.6 117.664 li
518.96 117.424 li
518.84 117.424 li
519.2 117.184 li
519.44 116.944 li
519.44 117.064 li
519.68 116.704 li
519.68 116.824 li
519.8 116.584 li
519.919 116.344 li
520.04 116.104 li
519.919 116.224 li
520.04 115.984 li
519.919 115.744 li
cp
520.88 115.984 mo
520.88 164.224 li
520.76 164.584 li
520.64 164.944 li
520.52 165.184 li
520.28 165.544 li
520.04 165.784 li
519.68 166.144 li
519.32 166.384 li
518.96 166.624 li
518 167.104 li
516.919 167.584 li
515.72 167.944 li
514.4 168.304 li
512.84 168.664 li
511.16 169.024 li
509.48 169.264 li
507.56 169.504 li
505.64 169.624 li
503.6 169.744 li
501.56 169.864 li
499.4 169.864 li
497.24 169.864 li
495.08 169.744 li
493.04 169.624 li
491.12 169.504 li
489.2 169.264 li
487.52 169.024 li
485.84 168.664 li
484.4 168.304 li
482.96 167.944 li
481.76 167.584 li
480.68 167.104 li
479.72 166.624 li
479.36 166.384 li
479 166.144 li
478.64 165.784 li
478.4 165.544 li
478.16 165.184 li
478.04 164.944 li
477.919 164.584 li
477.919 164.224 li
477.919 115.984 li
478.64 115.984 li
478.64 164.224 li
478.76 164.464 li
478.76 164.344 li
478.76 164.584 li
478.88 164.824 li
479 165.064 li
479 164.944 li
479.24 165.304 li
479.24 165.184 li
479.48 165.424 li
479.84 165.664 li
479.72 165.664 li
480.2 165.904 li
480.08 165.904 li
481.04 166.384 li
482 166.744 li
483.2 167.224 li
484.52 167.584 li
486.08 167.824 li
487.64 168.184 li
489.32 168.424 li
491.24 168.664 li
493.16 168.784 li
495.08 168.904 li
497.24 169.024 li
499.4 169.024 li
501.44 169.024 li
503.6 168.904 li
505.64 168.784 li
507.56 168.664 li
509.36 168.424 li
511.04 168.184 li
512.72 167.824 li
514.16 167.584 li
515.48 167.224 li
516.68 166.744 li
517.76 166.384 li
517.64 166.384 li
518.6 165.904 li
518.96 165.664 li
519.2 165.424 li
519.44 165.184 li
519.44 165.304 li
519.68 164.944 li
519.68 165.064 li
519.8 164.824 li
519.919 164.584 li
520.04 164.344 li
519.919 164.464 li
520.04 164.224 li
520.04 115.984 li
520.88 115.984 li
cp
.755581 .527459 .146944 .0145571 cmyk
f
.750179 .679652 .670192 .901488 cmyk
%ADOBeginSubsetFont: HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HNSWTD+CIDFont+F1-GBK-EUC-H 1 GetGlyphDirectory
2139 <001C60D8A8C9B5EE31026C8A78BC05CAA18C3E9280E5D48F0AF92B5E92
2410439263DF5FC505ACF0CED92B874D847A0ABF959CC91389B44323B88E46F1
1A5A106A2B7A5BC3CAB251FCF4404A6CDF937E0E4F20371F229AEF13BD57F907
4158CFF919FAABBE3DE3FD362206858A76C693A8B6A665EE51B3D0A812010132
37046AB1B39DF6E310211C704980E6898AFE4393C1B0893FE20B6753031804BE
82E95D346D3F50E0682A7AA54B8985ABAEEFEA98F0692DB40ACC748CA94EA82C
40ACDDA6AA5F76E0A838330213AE22C51B1BB54773AB17176F7DC0E05526BB50
A1D5A228FA90ACE0C49A3D7A1889FFAD39011AE5D99E9E9A7453382855CC59D3
274B00FA513051297EE29854D944242250BEBA0FA1DA87DC1DC5B790930B206E
625F42CBDBA4342B74FBD6C4B1D1BC66> |
!
end
end end
%ADOEndSubsetFont
/HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H findfont [14.88 0 0 -14.88 0 0 ]msf
484.373 140.215 mo
(\012\037\006\021)
[14.88 0 ]xsh
484.373 156.897 mo
(4\327\010[)
[14.88 0 ]xsh
6.31955 166.984 mo
35.5995 173.944 35.5995 159.904 64.9995 159.904 cv
64.9995 123.304 li
6.31955 123.304 li
cp
11.1196 123.304 mo
11.1196 118.624 li
69.3195 118.624 li
69.3195 155.344 li
67.1595 155.344 64.9995 155.704 64.9995 155.704 cv
64.9995 123.304 li
cp
15.6796 118.624 mo
15.6796 113.944 li
74.4796 113.944 li
74.4796 150.664 li
71.8396 150.664 69.3195 150.904 69.3195 150.904 cv
69.3195 118.624 li
cp
.333379 .159304 0 0 cmyk
ef
5.83955 122.944 mo
65.3595 122.944 li
65.3595 160.264 li
62.2395 160.384 li
62.3595 160.384 li
59.8395 160.504 li
57.4395 160.624 li
55.2795 160.864 li
53.2395 161.224 li
51.1995 161.584 li
49.3996 161.944 li
47.5995 162.424 li
45.9195 162.904 li
46.0395 162.904 li
44.3595 163.384 li
42.7995 163.864 li
41.3595 164.344 li
38.4795 165.424 li
35.7195 166.504 li
32.9595 167.464 li
31.5195 167.824 li
30.0795 168.184 li
28.6395 168.544 li
27.0795 168.784 li
25.3995 169.024 li
23.7195 169.264 li
21.9195 169.264 li
20.1195 169.384 li
18.0795 169.264 li
16.0396 169.024 li
13.7595 168.784 li
11.3595 168.424 li
8.83955 167.944 li
5.83955 167.224 li
5.83955 122.944 li
cp
6.67954 166.984 mo
6.43954 166.504 li
9.07954 167.104 li
11.5995 167.584 li
11.4795 167.584 li
13.8795 167.944 li
16.0396 168.304 li
18.1995 168.424 li
18.0795 168.424 li
20.1195 168.544 li
21.9195 168.544 li
23.7195 168.424 li
25.3995 168.304 li
25.2795 168.304 li
26.9595 168.064 li
28.3995 167.704 li
29.9595 167.464 li
31.3996 166.984 li
31.2795 167.104 li
32.7195 166.624 li
35.4795 165.664 li
38.2395 164.704 li
41.1195 163.624 li
42.5595 163.144 li
44.1195 162.544 li
45.7995 162.064 li
47.4795 161.584 li
49.1595 161.224 li
51.0795 160.744 li
53.1195 160.384 li
55.1595 160.144 li
57.4395 159.904 li
59.7195 159.664 li
62.2395 159.544 li
64.9995 159.544 li
64.5195 159.904 li
64.5195 123.304 li
64.9995 123.784 li
6.31955 123.784 li
6.67954 123.304 li
6.67954 166.984 li
cp
10.7595 123.304 mo
10.7595 118.144 li
69.7995 118.144 li
69.7995 155.824 li
68.5995 155.824 li
67.7596 155.824 li
67.0396 155.944 li
66.3195 155.944 li
65.8395 155.944 li
65.3595 156.064 li
65.2395 156.064 li
65.1195 156.064 li
64.9995 156.064 li
64.9995 155.224 li
64.8795 155.224 li
64.9995 155.224 li
65.1195 155.224 li
65.2395 155.224 li
65.7195 155.104 li
66.3195 155.104 li
66.9196 155.104 li
67.7596 154.984 li
68.5995 154.984 li
69.3195 154.984 li
68.9595 155.344 li
68.9595 118.624 li
69.3195 118.984 li
11.1195 118.984 li
11.5995 118.624 li
11.5995 123.304 li
10.7595 123.304 li
cp
15.3195 118.624 mo
15.3195 113.584 li
74.8395 113.584 li
74.8395 151.024 li
73.5195 151.024 li
72.5595 151.144 li
71.7195 151.144 li
70.9995 151.144 li
70.2795 151.144 li
69.7995 151.264 li
69.6796 151.264 li
69.5595 151.264 li
69.4395 151.264 li
69.3195 151.264 li
69.3195 150.424 li
69.4395 150.424 li
69.3195 150.424 li
69.4395 150.424 li
69.5595 150.424 li
69.7995 150.424 li
70.2795 150.424 li
70.8795 150.304 li
71.7195 150.304 li
72.5595 150.304 li
73.5195 150.304 li
74.3596 150.184 li
73.9995 150.664 li
73.9995 113.944 li
74.4796 114.304 li
15.6796 114.304 li
16.0396 113.944 li
16.0396 118.624 li
15.3195 118.624 li
cp
.755581 .527459 .146944 .0145571 cmyk
f
.750179 .679652 .670192 .901488 cmyk
%ADOBeginSubsetFont: HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HNSWTD+CIDFont+F1-GBK-EUC-H 3 GetGlyphDirectory
9408 <001C60D8A8C9B5EE31033B73FA6856B4591160613B5E97D39B334F3A0F
9EC2B44986219470E8D2A72C5CFC28CD394F4DD992A2C5C195B2C9B95E569B2D
5EDBE923D5DC26A3A490FF2D7940AE68C09B82181FA25E68A0C431A1480265A0
5DBF1DD2CB5F733D524E5DF4BF2C3E29047583C123298360E9827F2B4727F062
BF48EE3C26F2D5B0AFB01BA037AC49BE8DAF37A361018C4E90F0552CE1431D8B
CBADA5EEC1695F87A78776056213BD1926AC3FC90BC61EFF5CD8CCBB4FDADFC8
9F88E1C819C1D39D41A4BA9D89505FEAE01E024D19FD2FCC72616E3D8D6C710D
5737DE7DD916F7FF7BF2E0EE410926CA14FBDFDD34588C15BE4D59EECB03FDBC
A96ED94CD04DE9B221DD24391B1F0C7433A601D9E7AF48D0D62D4516488383BF
0322C900E7D2CE517190B9FA51D21E9692E0F900B324DCC42A6962AB4BFB9D5D
EE4D725A6FBA1D40AAE80DC29B0F5A95AAC68B204FEF91C96504DB7E550B91FF
45F655859F10AE4CF1BCEDF788A58E7A8E40EDC2D359403C3036DBAA18FF51DC
50B02D312B390E90187DFC7D064A2F00504E0A897923605D54970DAA504CFCCA
74112F58C35A44E12E06E76113041015F24736B34F5564A07390A3279DFA5A18
B0994C20BCE757F3AF798929E91A40194FD1D45CB87F71FC0BBE14AC48D5E8E7
7FDE3316A9AAF6BF88> |
1299 <001C60D8A8C9B5EE3103A4C250E09C5CF94990F2B707BB30A5FDEA531A
A7D360B46D8F13736FC17B1FFA6EF9864A143D3D8AAA960EE6110359DE924F45
EEDB681CE51DB703397A8B55403498970925667EC581A6D2AB807CB378F5032A
5F56FAB37B7FA02CC29268E41C443C09CB770F65183615D2A181D003A07693DB
31D9342449E342E352B8A32D717844C8466B76324213E677A00FB88EABB4B35D
20B796E04078C1BBE1627F8FADDA14E4CF2D619EDFADD4F26A898001517AD70E
0DE14855B024462E7989A92F9B26BC387BEF37925500A3B724CCDFF7C5CA1E49
35F53589D3323F5B515E08C9BD7775B29A86F6A637B86B0E340DEA3E0C2158DA
5B5CE8AE2A0ABCC1C35B4E0D79F9B0930BBEF46D> |
11825 <001C60D8A8C9B5EE310DC6506A25B46D1148BEBE70EC36ABC4F7E1009
E4E2A4CAE554EB92203D6CE835C37904F4E0B1C7CFCE83A41AD0491C18379B9C
9BE64194743D51A1C41F710F8F302063EE0E937614C75365FB514C8470E3A1C2
17BF2657335459BA20B0F5B6EA1A68D9693B9F08EA67BEF6FD0A08D365D8FF8E
540ADDB4E0D3B7873393BD2CE57236D9D2A186D08BA44E5EC65F6465E39C05A7
8536C34C4EBD0FAC7B4CBCC2C5F2CEB52E71CA7D127F91E1C78A9B9DAC84BF46
CD9226A67C0AE9B6A3FFDCF0F86FE78A3EE0C64CF86A1E45479603BE677BDF01
944C02CA5A4BB5DC5DE79C2A0EF1BC5611F47B95B5D637295655CCD4AD4671D6
F1269C108EB93866B45E91BF105CD4A75A175D6CA9619925B67B6E2A2D3EFAC> |
!
end
end end
%ADOEndSubsetFont
/HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H findfont [14.88 0 0 -14.88 0 0 ]msf
13.1539 150.329 mo
($\300\005\023.1)sh
264.2 67.8643 mo
264.2 64.6243 266.84 61.9843 270.08 61.9843 cv
293.84 61.9843 li
297.08 61.9843 299.72 64.6243 299.72 67.8643 cv
299.72 207.544 li
299.72 210.784 297.08 213.424 293.84 213.424 cv
270.08 213.424 li
266.84 213.424 264.2 210.784 264.2 207.544 cv
cp
.333379 .159304 0 0 cmyk
ef
263.72 67.8643 mo
263.84 67.2643 li
263.84 66.6643 li
264.08 66.0643 li
264.2 65.4643 li
264.56 64.8643 li
264.8 64.3843 li
265.64 63.4243 li
266.6 62.7043 li
267.08 62.3443 li
267.68 62.1043 li
268.16 61.8643 li
268.88 61.7443 li
269.48 61.6243 li
270.08 61.6243 li
293.84 61.6243 li
294.44 61.6243 li
295.16 61.7443 li
295.76 61.8643 li
296.36 62.1043 li
296.84 62.3443 li
297.44 62.7043 li
298.28 63.4243 li
299.12 64.3843 li
299.36 64.8643 li
299.72 65.4643 li
299.84 66.0643 li
300.08 66.6643 li
300.2 67.2643 li
300.2 67.8643 li
300.2 207.544 li
300.2 208.144 li
300.08 208.744 li
299.84 209.344 li
299.72 209.944 li
299.36 210.544 li
299.12 211.024 li
298.28 211.984 li
297.44 212.824 li
296.84 213.064 li
296.24 213.424 li
295.76 213.544 li
295.16 213.784 li
294.44 213.784 li
293.84 213.904 li
270.08 213.904 li
269.48 213.784 li
268.88 213.784 li
268.16 213.544 li
267.68 213.424 li
267.08 213.064 li
266.6 212.824 li
265.64 211.984 li
264.8 211.024 li
264.56 210.544 li
264.2 209.944 li
264.08 209.344 li
263.84 208.744 li
263.84 208.144 li
263.72 207.544 li
263.72 67.8643 li
cp
264.56 207.544 mo
264.56 207.544 li
264.56 208.144 li
264.56 208.024 li
264.68 208.624 li
264.8 209.224 li
264.8 209.104 li
265.04 209.704 li
265.28 210.184 li
265.52 210.664 li
265.52 210.544 li
266.24 211.504 li
266.12 211.384 li
267.08 212.104 li
266.96 212.104 li
267.44 212.344 li
267.92 212.584 li
268.52 212.824 li
268.4 212.824 li
269 212.944 li
269.6 213.064 li
269.48 213.064 li
270.08 213.064 li
293.84 213.064 li
294.44 213.064 li
294.32 213.064 li
294.92 212.944 li
295.52 212.824 li
295.4 212.824 li
296 212.584 li
296.48 212.344 li
296.96 212.104 li
296.84 212.104 li
297.8 211.384 li
297.68 211.504 li
298.4 210.544 li
298.4 210.664 li
298.64 210.184 li
298.88 209.704 li
299.12 209.104 li
299.12 209.224 li
299.24 208.624 li
299.36 208.024 li
299.36 208.144 li
299.36 207.544 li
299.36 67.8643 li
299.36 67.9843 li
299.36 67.3843 li
299.24 66.7843 li
299.12 66.3043 li
298.88 65.7043 li
298.88 65.8243 li
298.64 65.2243 li
298.64 65.3443 li
298.4 64.8643 li
297.68 64.0243 li
297.8 64.0243 li
296.84 63.3043 li
296.96 63.3043 li
296.48 63.0643 li
296 62.8243 li
295.4 62.5843 li
295.52 62.7043 li
294.92 62.4643 li
294.32 62.4643 li
294.44 62.4643 li
293.84 62.3443 li
270.08 62.3443 li
269.48 62.4643 li
269.6 62.4643 li
269 62.4643 li
268.4 62.7043 li
268.52 62.5843 li
267.92 62.8243 li
267.44 63.0643 li
266.96 63.3043 li
267.08 63.3043 li
266.12 64.0243 li
266.24 64.0243 li
265.52 64.8643 li
265.28 65.3443 li
265.28 65.2243 li
265.04 65.8243 li
265.04 65.7043 li
264.8 66.3043 li
264.68 66.7843 li
264.56 67.3843 li
264.56 67.9843 li
264.56 67.8643 li
264.56 207.544 li
cp
.755581 .527459 .146944 .0145571 cmyk
f
.750179 .679652 .670192 .901488 cmyk
/HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H findfont [13.2 0 0 -13.2 0 0 ]msf
275.228 87.9139 mo
(\022\216)sh
275.228 103.744 mo
(\026W)sh
275.228 119.573 mo
(\012\037)sh
275.228 135.403 mo
(\006\021)sh
275.228 151.284 mo
(\024\326)sh
275.228 167.114 mo
(G\377)sh
275.228 182.944 mo
( Q)sh
275.228 197.845 mo
(\015\273)sh
384.44 68.1042 mo
384.44 64.8643 387.08 62.2242 390.44 62.2242 cv
414.08 62.2242 li
417.44 62.2242 420.08 64.8643 420.08 68.1042 cv
420.08 207.784 li
420.08 211.024 417.44 213.664 414.08 213.664 cv
390.44 213.664 li
387.08 213.664 384.44 211.024 384.44 207.784 cv
cp
.333379 .159304 0 0 cmyk
ef
384.08 68.1042 mo
384.08 67.5042 li
384.2 66.9042 li
384.32 66.3043 li
384.56 65.7043 li
384.8 65.1042 li
385.16 64.6242 li
385.88 63.6642 li
386.84 62.9442 li
387.32 62.5843 li
387.92 62.3442 li
388.52 62.1042 li
389.12 61.9843 li
389.72 61.8643 li
390.44 61.7443 li
414.08 61.7443 li
414.8 61.8643 li
415.4 61.9843 li
416 62.1042 li
416.6 62.3442 li
417.2 62.5843 li
417.68 62.9442 li
418.64 63.6642 li
419.36 64.6242 li
419.72 65.1042 li
419.96 65.7043 li
420.2 66.3043 li
420.32 66.9042 li
420.44 67.5042 li
420.44 68.1042 li
420.44 207.784 li
420.44 208.384 li
420.32 208.984 li
420.2 209.584 li
419.96 210.184 li
419.72 210.784 li
419.36 211.264 li
418.64 212.224 li
417.68 213.064 li
417.2 213.304 li
416.6 213.544 li
416 213.784 li
415.4 214.024 li
414.8 214.024 li
414.08 214.144 li
390.44 214.144 li
389.72 214.024 li
389.12 214.024 li
388.52 213.784 li
387.92 213.544 li
387.32 213.304 li
386.84 213.064 li
385.88 212.224 li
385.16 211.264 li
384.8 210.784 li
384.56 210.184 li
384.32 209.584 li
384.2 208.984 li
384.08 208.384 li
384.08 207.784 li
384.08 68.1042 li
cp
384.92 207.784 mo
384.92 207.784 li
384.92 208.384 li
384.92 208.264 li
385.04 208.864 li
384.92 208.864 li
385.16 209.464 li
385.16 209.344 li
385.28 209.944 li
385.28 209.824 li
385.52 210.424 li
385.88 210.904 li
385.76 210.784 li
386.48 211.624 li
387.32 212.344 li
387.8 212.584 li
388.28 212.824 li
388.16 212.824 li
388.76 213.064 li
389.36 213.184 li
389.24 213.184 li
389.84 213.304 li
389.84 213.184 li
390.44 213.304 li
414.08 213.304 li
414.68 213.184 li
414.68 213.304 li
415.28 213.184 li
415.16 213.184 li
415.76 213.064 li
416.24 212.824 li
416.72 212.584 li
417.2 212.344 li
418.04 211.624 li
418.76 210.784 li
418.64 210.904 li
419 210.304 li
419 210.424 li
419.24 209.824 li
419.24 209.944 li
419.36 209.344 li
419.36 209.464 li
419.48 208.864 li
419.6 208.264 li
419.6 208.384 li
419.6 207.784 li
419.6 68.1042 li
419.6 68.2242 li
419.6 67.5042 li
419.6 67.6242 li
419.48 67.0243 li
419.36 66.5443 li
419.24 65.9442 li
419.24 66.0642 li
419 65.4642 li
419 65.5843 li
418.64 65.1042 li
418.76 65.1042 li
418.04 64.2643 li
417.2 63.5443 li
416.72 63.3043 li
416.24 63.0642 li
415.76 62.8242 li
415.16 62.7043 li
415.28 62.7043 li
414.68 62.7043 li
414.08 62.5843 li
390.44 62.5843 li
389.84 62.7043 li
389.24 62.7043 li
389.36 62.7043 li
388.76 62.8242 li
388.16 63.0642 li
388.28 63.0642 li
387.8 63.3043 li
387.32 63.5443 li
386.48 64.2643 li
385.76 65.1042 li
385.88 64.9843 li
385.52 65.5843 li
385.52 65.4642 li
385.28 66.0642 li
385.28 65.9442 li
385.16 66.5443 li
384.92 67.0243 li
385.04 67.0243 li
384.92 67.6242 li
384.92 67.5042 li
384.92 68.2242 li
384.92 68.1042 li
384.92 207.784 li
cp
.755581 .527459 .146944 .0145571 cmyk
f
.750179 .679652 .670192 .901488 cmyk
%ADOBeginSubsetFont: HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HNSWTD+CIDFont+F1-GBK-EUC-H 2 GetGlyphDirectory
17823 <001C60D8A8C9B5EE31034E259B4D35B26A09DFCCB86AF72C5F14F170F
55AB19F45C0373AF57E5BF77744CF3948DDE5F0555B3212CCBDC8F0F7E07AC16
D681642FFB4BA78E73DE19A0BE2841FE9D2EC9852DD8BA220D12391A6E17518E
4DC931B725E39B5CB7036F2246ACED223C6477BC9904A787F852EFA7C5539AD7
EDFBFCBBC292AF0DE766DCD7593DA98AE11B497F13070729798ECE17075A38A3
CA086C9249D4FD3C071220FB22C613D6ACA025C936AE39FC13D4B8EC836D43A0
4B7988C117F9064E25C9289E19204BD03F3268C932146F8DC6AE1388D3996964
1A3890CD90BC2A05ADEA7252A2DEDC0DCB4097C8DC8DB081AD6DD963468BAD30
E994445A664DC4373AC7E60C3EB24F85802CC8798D09A2FEDD17C5361B28EA1F
21F12D3847AF2CA1D134993D6F81F4A955670AA958CB28A02C69AB61B> |
1318 <001C60D8A8C9B5EE31025027D9903D87997EFE29CDC9B7798D759052E8
4D451ED65E9C94C44482A60C8E4F10111F444846D5FED3C114FD1B83772ACD32
7627BE917B2C008787798E972AF250FD4E55DDC09981BE69043F290EB1CA3339
30121AAE1BD771AB624215595C11CCF7856EFC126CA70DB137C6379CADBE8D17
8BE2EE42C4014F22EB4429A901308AC5001DF3CD110A36DFCF1829CBC8C04F00
E18F814DD7E36A166830512375294BC43D3772C2A5F1E8456B9315E95D69F100
661A6CB4FBB769E6370FE745E388E6C36E724B3CEC2FA170100930> |
!
end
end end
%ADOEndSubsetFont
/HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H findfont [13.2 0 0 -13.2 0 0 ]msf
395.575 88.1202 mo
(E\237)sh
395.575 104.001 mo
(\005&)sh
395.575 119.831 mo
(\012\037)sh
395.575 135.661 mo
(\006\021)sh
395.575 151.491 mo
(\024\326)sh
395.575 167.32 mo
(G\377)sh
395.575 183.202 mo
( Q)sh
395.575 198.052 mo
(\015\273)sh
166.88 62.5843 mo
210.32 62.5843 li
210.32 85.1443 li
166.88 85.1443 li
cp
.333379 .159304 0 0 cmyk
f
166.4 62.2243 mo
210.68 62.2243 li
210.68 85.5043 li
166.4 85.5043 li
166.4 62.2243 li
cp
167.24 85.1443 mo
166.88 84.6643 li
210.32 84.6643 li
209.84 85.1443 li
209.84 62.5843 li
210.32 62.9443 li
166.88 62.9443 li
167.24 62.5843 li
167.24 85.1443 li
cp
.755581 .527459 .146944 .0145571 cmyk
f
.750179 .679652 .670192 .901488 cmyk
/HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.96001 0 0 ]msf
175.993 77.3374 mo
(\022\216\026W)
[9.95999 0 ]xsh
HNSWTF+CIDFont+F3*1 [9.95992 0 0 -9.95992 0 0 ]msf
195.916 77.3403 mo
(1)sh
166.88 103.384 mo
210.68 103.384 li
210.68 125.944 li
166.88 125.944 li
cp
.333379 .159304 0 0 cmyk
f
166.4 103.024 mo
211.16 103.024 li
211.16 126.304 li
166.4 126.304 li
166.4 103.024 li
cp
167.24 125.944 mo
166.88 125.584 li
210.68 125.584 li
210.32 125.944 li
210.32 103.384 li
210.68 103.864 li
166.88 103.864 li
167.24 103.384 li
167.24 125.944 li
cp
.755581 .527459 .146944 .0145571 cmyk
f
.750179 .679652 .670192 .901488 cmyk
/HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.96001 0 0 ]msf
176.227 118.15 mo
(\022\216\026W)
[9.96002 0 ]xsh
HNSWTF+CIDFont+F3*1 [9.95992 0 0 -9.95992 0 0 ]msf
196.159 118.143 mo
(2)sh
166.88 190.504 mo
210.68 190.504 li
210.68 212.944 li
166.88 212.944 li
cp
.333379 .159304 0 0 cmyk
f
166.4 190.024 mo
211.16 190.024 li
211.16 213.424 li
166.4 213.424 li
166.4 190.024 li
cp
167.24 212.944 mo
166.88 212.584 li
210.68 212.584 li
210.32 212.944 li
210.32 190.504 li
210.68 190.864 li
166.88 190.864 li
167.24 190.504 li
167.24 212.944 li
cp
.755581 .527459 .146944 .0145571 cmyk
f
.750179 .679652 .670192 .901488 cmyk
/HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H findfont [9.96001 0 0 -9.96001 0 0 ]msf
174.787 205.261 mo
(\022\216\026W)
[9.96001 0 ]xsh
HNSWTF+CIDFont+F3*1 [9.95992 0 0 -9.95992 0 0 ]msf
194.719 205.262 mo
(m)sh
208.88 226.264 mo
258.08 226.264 li
264.44 226.264 269.72 231.184 269.72 237.184 cv
269.72 243.184 264.44 247.984 258.08 247.984 cv
208.88 247.984 li
202.4 247.984 197.12 243.184 197.12 237.184 cv
197.12 231.184 202.4 226.264 208.88 226.264 cv
cp
.333379 .159304 0 0 cmyk
ef
208.76 225.904 mo
258.08 225.904 li
259.28 225.904 li
260.48 226.144 li
261.68 226.384 li
262.76 226.744 li
263.84 227.224 li
264.8 227.824 li
265.76 228.424 li
266.6 229.144 li
267.32 229.984 li
268.04 230.824 li
268.64 231.784 li
269.24 232.744 li
269.6 233.824 li
269.84 234.904 li
270.08 235.984 li
270.2 237.184 li
270.08 238.264 li
269.84 239.464 li
269.6 240.544 li
269.24 241.504 li
268.64 242.584 li
268.04 243.424 li
267.32 244.384 li
266.6 245.104 li
265.76 245.824 li
264.8 246.544 li
263.84 247.024 li
262.76 247.504 li
261.68 247.864 li
260.48 248.224 li
259.28 248.344 li
258.08 248.464 li
208.76 248.464 li
207.56 248.344 li
206.36 248.224 li
205.28 247.864 li
204.08 247.504 li
203.12 247.024 li
202.04 246.544 li
201.2 245.824 li
200.24 245.104 li
199.52 244.384 li
198.8 243.424 li
198.2 242.584 li
197.72 241.504 li
197.24 240.544 li
197 239.464 li
196.76 238.264 li
196.76 237.184 li
196.76 235.984 li
197 234.904 li
197.24 233.824 li
197.72 232.744 li
198.2 231.784 li
198.8 230.824 li
199.52 229.984 li
200.24 229.144 li
201.2 228.424 li
202.04 227.824 li
203.12 227.224 li
204.08 226.744 li
205.28 226.384 li
206.36 226.144 li
207.56 225.904 li
208.76 225.904 li
cp
207.68 226.744 mo
207.68 226.744 li
206.48 226.864 li
206.6 226.864 li
205.4 227.224 li
205.52 227.104 li
204.44 227.584 li
204.44 227.464 li
203.48 227.944 li
202.52 228.544 li
202.52 228.424 li
201.68 229.144 li
201.68 229.024 li
200.84 229.744 li
200.12 230.464 li
199.52 231.304 li
198.92 232.144 li
198.44 233.104 li
198.08 234.064 li
197.84 235.024 li
197.6 236.104 li
197.6 237.184 li
197.6 237.064 li
197.6 238.264 li
197.6 238.144 li
197.84 239.224 li
198.08 240.304 li
198.08 240.184 li
198.44 241.264 li
198.44 241.144 li
198.92 242.104 li
199.52 242.944 li
200.12 243.784 li
200.84 244.504 li
201.68 245.224 li
202.52 245.824 li
203.48 246.304 li
204.44 246.784 li
205.52 247.144 li
205.4 247.144 li
206.6 247.384 li
206.48 247.384 li
207.68 247.504 li
208.88 247.624 li
258.08 247.624 li
259.28 247.504 li
259.16 247.504 li
260.36 247.384 li
261.44 247.144 li
262.52 246.784 li
262.4 246.784 li
263.48 246.304 li
263.36 246.304 li
264.44 245.824 li
264.32 245.824 li
265.28 245.224 li
265.16 245.224 li
266 244.504 li
266.72 243.784 li
267.44 242.944 li
267.92 242.104 li
268.4 241.144 li
268.4 241.264 li
268.76 240.184 li
268.76 240.304 li
269.12 239.224 li
269.24 238.144 li
269.24 238.264 li
269.36 237.064 li
269.36 237.184 li
269.24 236.104 li
269.12 235.024 li
268.76 234.064 li
268.4 233.104 li
267.92 232.144 li
267.44 231.304 li
266.72 230.464 li
266 229.744 li
265.16 229.024 li
265.28 229.144 li
264.32 228.424 li
264.44 228.544 li
263.36 227.944 li
263.48 227.944 li
262.4 227.464 li
262.52 227.584 li
261.44 227.104 li
261.44 227.224 li
260.36 226.864 li
259.16 226.744 li
259.28 226.744 li
258.08 226.744 li
208.88 226.744 li
207.68 226.744 li
cp
.755581 .527459 .146944 .0145571 cmyk
f
.750179 .679652 .670192 .901488 cmyk
%ADOBeginSubsetFont: HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HNSWTD+CIDFont+F1-GBK-EUC-H 2 GetGlyphDirectory
14823 <001C60D8A8C9B5EE310DF071C3C44EDECB8DE7A1F5C79DC5D531DD127
641965C68D69D70D2D403063FF405892DD6118A130480A1BF9964F6C9122A49D
1998A2418736332AE93BCCEDE2FC56C355D9D80940049E1D10CB3C3F37490941
B1526199510CBBD7A2C35A5AC47552CCFD9E9C45847E52DE0F6A63FED5BC0156
F95C6C579E34376D556FA060120C822E77B016CC1D61242883F7153884AE397D
0C2B7E6E07CFE104B2607E4FF21B1B84FC0C11076FE899BDC016ACCAE52E2195
322FE5E0D179C791E3EC11942094010C417630700CE18ACA11839631E0C26865
B725A0373134794B0F6F4CCA2A193F0DCBB17196C9E0355A2D8C7C5BD21EB45C
B3574065C088A9DE338C32E54249D1C65808E0C830E0703510FF45997B748447
3961E251719CC256C42D2D3CB55B4FFF4B4B5C7B4D973160D0C0B8693CE9CE57
0563B12E825ABD5742E1FA58FEFD3D8B4DA78451B5EAE9B94798D1CF7E38767B
E60CBBE6578B4C2C9C2C35F072A563924D893E04127F8F4EEBFF0DFF6A3B4C3B
292CC79A77D46DF410EEBBA0A095E4EA64F05C46635659D> |
2566 <001C60D8A8C9B5EE31023EAC3A51772F16EC49C5B0AE161A8317B2C8AD
7B34929E58612742842FA694BB60002C2DD05220F1C4C3C6C4B098B9DCF18D23
6EB21FAC48FE7B65AF85A82D5859D948BF87B3E84834743CF0B31B0B526DE1A8
54D7CE974B5D343C7EF81141AF0C9DB52CFCBA7F0E45CD8D35C03B9BBC4B8AD9
E6CB76943CC95846E39129FA13DC83D2D5280CB7EA00B23613467DDA55E7673E
187A3C49AA319A0A45EB02CA9C217F41B2AF19411D81437B2114AECE3E6C7BD5
F7BB97523DA795637E7D078F65721F2379EC3BF8A9534E1A3ECA6E987616098A
8CCFADC0D2F44D88BE07FD92E288> |
!
end
end end
%ADOEndSubsetFont
/HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H findfont [11.52 0 0 -11.52 0 0 ]msf
217.025 241.129 mo
(9\347\012\006)
[11.52 0 ]xsh
HNSWTE+CIDFont+F2*1 [11.52 0 0 -11.52 0 0 ]msf
240.081 241.147 mo
($)sh
HNSWTE+CIDFont+F2*1 [8.40008 0 0 -8.40008 0 0 ]msf
246.083 243.549 mo
(!)sh
85.9995 213.184 mo
85.1595 213.184 li
84.1995 213.184 li
83.4795 213.064 li
82.7595 212.944 li
82.1595 212.824 li
81.7995 212.704 li
81.4395 212.584 li
81.3195 212.464 li
81.3195 212.224 li
81.3195 138.544 li
81.1995 138.544 li
81.3195 138.544 li
81.0795 138.424 li
80.7195 138.304 li
80.1195 138.184 li
79.5195 138.064 li
78.6795 138.064 li
77.8395 138.064 li
75.3195 137.944 li
75.3195 137.584 li
77.8395 137.584 li
78.6795 137.584 li
79.5195 137.464 li
80.1195 137.344 li
80.7195 137.224 li
80.5995 137.224 li
81.0795 137.104 li
81.3195 136.984 li
81.1995 137.104 li
81.3195 136.984 li
81.3195 137.104 li
81.3195 136.984 li
81.3195 63.3043 li
81.3195 63.1843 li
81.4395 63.0643 li
81.7995 62.8243 li
82.1595 62.7043 li
82.7595 62.5843 li
83.4795 62.4643 li
84.1995 62.4643 li
85.1595 62.3443 li
85.9995 62.3443 li
85.9995 62.8243 li
85.1595 62.8243 li
84.3195 62.8243 li
83.4795 62.9443 li
82.8795 62.9443 li
82.2795 63.0643 li
81.9195 63.1843 li
81.6795 63.4243 li
81.6795 63.3043 li
81.6795 63.4243 li
81.6795 63.3043 li
81.6795 63.4243 li
81.6795 63.3043 li
81.6795 137.104 li
81.6795 137.224 li
81.5595 137.344 li
81.1995 137.464 li
80.7195 137.704 li
80.2395 137.824 li
79.5195 137.824 li
78.7995 137.944 li
77.8395 137.944 li
76.9995 137.944 li
76.9995 137.584 li
77.8395 137.584 li
78.7995 137.704 li
79.5195 137.704 li
80.2395 137.824 li
80.7195 137.944 li
81.1995 138.064 li
81.5595 138.184 li
81.6795 138.304 li
81.6795 138.544 li
81.6795 212.224 li
81.9195 212.344 li
82.2795 212.464 li
82.8795 212.584 li
83.4795 212.704 li
84.3195 212.704 li
85.1595 212.824 li
85.9995 212.824 li
cp
f
378.44 266.824 mo
402.44 266.824 li
402.44 217.864 li
402.08 217.864 li
402.08 266.704 li
402.2 266.464 li
378.44 266.464 li
378.44 266.824 li
cp
404.72 218.584 mo
402.2 213.664 li
399.8 218.584 li
404.72 218.584 li
cp
f
305.12 266.824 mo
233.24 266.824 li
233.24 252.184 li
233.6 252.184 li
233.6 266.704 li
233.48 266.464 li
305.12 266.464 li
305.12 266.824 li
cp
230.96 252.904 mo
233.48 247.984 li
235.88 252.904 li
230.96 252.904 li
cp
f
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/HNSWTF+CIDFont+F3*1 uf
/HNSWTF+CIDFont+F3 uf
/QJJAAA+CIDFont+F3 uf
/HNSWTE+CIDFont+F2*1 uf
/HNSWTE+CIDFont+F2 uf
/HIBBAA+CIDFont+F2 uf
/HNSWTD+CIDFont+F1-GBK-EUC-H-Identity-H uf
/HNSWTD+CIDFont+F1-GBK-EUC-H /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
